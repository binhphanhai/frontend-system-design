"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[424],{6566:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"frontend-system-design/chat-app","title":"Chat Application System Design (e.g. Messenger)","description":"System design interview question: Design a chat application that allows users to send messages to each other.","source":"@site/docs/frontend-system-design/15-chat-app.md","sourceDirName":"frontend-system-design","slug":"/frontend-system-design/chat-app","permalink":"/frontend-system-design/docs/frontend-system-design/chat-app","draft":false,"unlisted":false,"editUrl":"https://github.com/binhphanhai/frontend-system-design/tree/main/Summarize/docs/frontend-system-design/15-chat-app.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{},"sidebar":"frontendSystemDesignSidebar","previous":{"title":"Photo Sharing Application System Design (e.g. Instagram)","permalink":"/frontend-system-design/docs/frontend-system-design/photo-sharing"},"next":{"title":"Pinterest System Design: Masonry Layout and Feed","permalink":"/frontend-system-design/docs/frontend-system-design/pinterest"}}');var r=s(4848),l=s(8453);const t={},a="Chat Application System Design (e.g. Messenger)",c={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"1. Overview",id:"1-overview",level:2},{value:"2. Requirements Exploration",id:"2-requirements-exploration",level:2},{value:"Core Functionalities",id:"core-functionalities",level:3},{value:"Real-Time Messaging",id:"real-time-messaging",level:3},{value:"Offline Support",id:"offline-support",level:3},{value:"Group Conversations",id:"group-conversations",level:3},{value:"Tricky Scenarios",id:"tricky-scenarios",level:3},{value:"3. Architecture &amp; High-Level Design",id:"3-architecture--high-level-design",level:2},{value:"Key Scenarios &amp; Challenges",id:"key-scenarios--challenges",level:3},{value:"Architecture Diagram",id:"architecture-diagram",level:3},{value:"Component Responsibilities",id:"component-responsibilities",level:3},{value:"Rendering",id:"rendering",level:3},{value:"4. Data Model",id:"4-data-model",level:2},{value:"Client-Side Database (IndexedDB)",id:"client-side-database-indexeddb",level:3},{value:"Client-Only State",id:"client-only-state",level:3},{value:"5. API &amp; Interface Definition",id:"5-api--interface-definition",level:2},{value:"Core APIs",id:"core-apis",level:3},{value:"Example: Send Message Flow",id:"example-send-message-flow",level:4},{value:"Example: Server Events",id:"example-server-events",level:4},{value:"Example: Real-Time Event Payload",id:"example-real-time-event-payload",level:4},{value:"Message Status Table",id:"message-status-table",level:4},{value:"6. Deep Dive: Data Sync, Real-Time, and Offline",id:"6-deep-dive-data-sync-real-time-and-offline",level:2},{value:"Client Database",id:"client-database",level:3},{value:"Real-Time Updates",id:"real-time-updates",level:3},{value:"Network &amp; Offline",id:"network--offline",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"7. Performance, Scalability, and Reliability",id:"7-performance-scalability-and-reliability",level:2},{value:"8. Security &amp; Privacy",id:"8-security--privacy",level:2},{value:"9. Accessibility",id:"9-accessibility",level:2},{value:"10. User Experience (UX)",id:"10-user-experience-ux",level:2},{value:"11. Internationalization (i18n)",id:"11-internationalization-i18n",level:2},{value:"12. Analytics, Observability, and A/B Testing",id:"12-analytics-observability-and-ab-testing",level:2},{value:"13. Advanced Topics",id:"13-advanced-topics",level:2},{value:"14. References",id:"14-references",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"chat-application-system-design-eg-messenger",children:"Chat Application System Design (e.g. Messenger)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"System design interview question: Design a chat application that allows users to send messages to each other."})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#requirements-exploration",children:"Requirements Exploration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#architecture--high-level-design",children:"Architecture & High-Level Design"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#data-model",children:"Data Model"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#api--interface-definition",children:"API & Interface Definition"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#deep-dive-data-sync-real-time-and-offline",children:"Deep Dive: Data Sync, Real-Time, and Offline"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#performance-scalability-and-reliability",children:"Performance, Scalability, and Reliability"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#security--privacy",children:"Security & Privacy"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#accessibility",children:"Accessibility"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#user-experience-ux",children:"User Experience (UX)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#internationalization-i18n",children:"Internationalization (i18n)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#analytics-observability-and-ab-testing",children:"Analytics, Observability, and A/B Testing"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#advanced-topics",children:"Advanced Topics"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#references",children:"References"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-overview",children:"1. Overview"}),"\n",(0,r.jsx)(n.p,{children:"Chat applications like Messenger, WhatsApp, Slack, Discord, and Telegram are among the most demanding real-time web applications. They must deliver a seamless, performant, and reliable experience, supporting offline usage, real-time updates, cross-device synchronization, and robust error handling. This document provides a deep, technical dive into the architecture, data model, APIs, offline/online sync, real-time messaging, scalability, security, analytics, and real-world trade-offs for building a modern chat application frontend."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-requirements-exploration",children:"2. Requirements Exploration"}),"\n",(0,r.jsx)(n.h3,{id:"core-functionalities",children:"Core Functionalities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"1:1 Messaging:"})," Send and receive messages in real-time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Chat History:"})," View conversation history, scrollback, search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Message Status:"})," Sending, sent, delivered, read, failed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Offline Support:"})," Queue outgoing messages, browse messages offline"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-Tab/Device Sync:"})," Consistent state across tabs/devices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Text & Emoji:"})," Support rich text, emojis (images, files as extension)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"real-time-messaging",children:"Real-Time Messaging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Low Latency:"})," Messages delivered instantly, no page refresh"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reliable Delivery:"})," Retry, status indicators, error handling"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"offline-support",children:"Offline Support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Outgoing Queue:"})," Store unsent messages, retry on reconnect"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Local Browsing:"})," Access chat history offline"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"group-conversations",children:"Group Conversations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assume 1:1 for this design"})," (group chat is an extension)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"tricky-scenarios",children:"Tricky Scenarios"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multiple tabs, multiple devices, offline/online transitions, out-of-order delivery, stale clients"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-architecture--high-level-design",children:"3. Architecture & High-Level Design"}),"\n",(0,r.jsx)(n.h3,{id:"key-scenarios--challenges",children:"Key Scenarios & Challenges"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-tab:"})," Shared client DB, sync via BroadcastChannel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-device:"})," Sync with server on load, resolve conflicts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Offline:"})," Queue outgoing, sync on reconnect, show accurate status"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Out-of-order:"})," Insert messages by timestamp, handle duplicates"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://www.gfecdn.net/img/questions/chat-application-messenger/chat-application-architecture.png",alt:"Chat Application Architecture"})}),"\n",(0,r.jsx)(n.h3,{id:"component-responsibilities",children:"Component Responsibilities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Chat UI:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Conversations List: List of conversations (user, last message, timestamp)"}),"\n",(0,r.jsx)(n.li,{children:"Selected Conversation: List of messages, input box for new messages"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controller:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Manages data flow, fetches from DB, writes to DB"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Syncer:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Syncs client DB with server, manages outgoing/incoming messages"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client-side Database:"})," Stores all data needed for UI and offline"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Message Scheduler:"})," Tracks outgoing messages, schedules sending, manages statuses, retries, batching"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"HTTP APIs and real-time APIs (WebSocket) for conversations, messages, and sync"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rendering",children:"Rendering"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SPA (Single Page App):"})," Pure client-side rendering for high interactivity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SSR (Server-Side Rendering):"})," Optional for performance, not needed for SEO"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-data-model",children:"4. Data Model"}),"\n",(0,r.jsx)(n.h3,{id:"client-side-database-indexeddb",children:"Client-Side Database (IndexedDB)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Table/Entity"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Sync to Server"}),(0,r.jsx)(n.th,{children:"Used by"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Conversation"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"}),(0,r.jsx)(n.td,{children:"Conversations List"}),(0,r.jsx)(n.td,{children:"Conversation between users (1:1 for now)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Message"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"}),(0,r.jsx)(n.td,{children:"Conversation"}),(0,r.jsx)(n.td,{children:"Text message, status: sending, sent, delivered, read, failed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"User"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"}),(0,r.jsx)(n.td,{children:"All"}),(0,r.jsx)(n.td,{children:"User identity"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ConversationUser"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Associates users and conversations (many-to-many, supports group chat)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DraftMessage"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"No"}),(0,r.jsx)(n.td,{children:"Conversation"}),(0,r.jsx)(n.td,{children:"Store half-written, unsent messages"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SendMessageRequest"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"No"}),(0,r.jsx)(n.td,{children:"Message Scheduler"}),(0,r.jsx)(n.td,{children:"Tracks status of messages to be sent (pending, in_flight, fail, success)"})]})]})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DraftMessage:"})," Stores unsent messages, persisted for session recovery"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SendMessageRequest:"})," Tracks outgoing messages, retries, failures, exponential backoff"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"client-only-state",children:"Client-Only State"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Selected conversation"}),"\n",(0,r.jsx)(n.li,{children:"Conversation scroll position"}),"\n",(0,r.jsx)(n.li,{children:"Outgoing message (debounced/throttled to DB)"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-api--interface-definition",children:"5. API & Interface Definition"}),"\n",(0,r.jsx)(n.h3,{id:"core-apis",children:"Core APIs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Send message"}),": Insert to Message table, mark as sending, add to SendMessageRequest"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sync outgoing messages"}),": Scheduler watches SendMessageRequest, retries, batches"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server events (real-time updates)"}),": WebSocket events for new messages, status updates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fetch conversations"}),": List all conversations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fetch conversation messages"}),": Paginated, cursor-based for history"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-send-message-flow",children:"Example: Send Message Flow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Add row to ",(0,r.jsx)(n.code,{children:"Message"})," table with ",(0,r.jsx)(n.code,{children:"sending"})," status"]}),"\n",(0,r.jsxs)(n.li,{children:["Add row to ",(0,r.jsx)(n.code,{children:"SendMessageRequest"})," table with ",(0,r.jsx)(n.code,{children:"pending"})," status"]}),"\n",(0,r.jsx)(n.li,{children:'UI shows new message as "Sending"'}),"\n",(0,r.jsxs)(n.li,{children:["Delete any ",(0,r.jsx)(n.code,{children:"DraftMessage"})," for the conversation"]}),"\n",(0,r.jsxs)(n.li,{children:["Message Scheduler syncs ",(0,r.jsx)(n.code,{children:"pending"})," messages with server"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-server-events",children:"Example: Server Events"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"message_sent"}),": Mark message as sent, clean up scheduler"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"message_delivered"}),": Mark message as delivered"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"message_failed"}),": Mark as fail, increment fail count, retry"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"incoming_message"}),": Add to ",(0,r.jsx)(n.code,{children:"Message"})," table, update UI"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sync"}),": On connect, server sends missing data to client"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-real-time-event-payload",children:"Example: Real-Time Event Payload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "event_name": "incoming_message",\n  "payload": {\n    "foo": "value_a",\n    "bar": "value_b"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"message-status-table",children:"Message Status Table"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Status"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Messenger Icon"}),(0,r.jsx)(n.th,{children:"WhatsApp Icon"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sending"}),(0,r.jsx)(n.td,{children:"Attempting to send"}),(0,r.jsx)(n.td,{children:"Empty circle"}),(0,r.jsx)(n.td,{children:"Clock icon"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sent"}),(0,r.jsx)(n.td,{children:"Sent to server"}),(0,r.jsx)(n.td,{children:"Checkmark outline"}),(0,r.jsx)(n.td,{children:"Single gray checkmark"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Delivered"}),(0,r.jsx)(n.td,{children:"Delivered to recipient"}),(0,r.jsx)(n.td,{children:"Checkmark filled"}),(0,r.jsx)(n.td,{children:"Double gray checkmark"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Read"}),(0,r.jsx)(n.td,{children:"Recipient has read"}),(0,r.jsx)(n.td,{children:"User profile picture"}),(0,r.jsx)(n.td,{children:"Double blue checkmark"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Failed"}),(0,r.jsx)(n.td,{children:"Failed to send"}),(0,r.jsx)(n.td,{children:"Exclamation in circle"}),(0,r.jsx)(n.td,{children:"Exclamation in circle"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-deep-dive-data-sync-real-time-and-offline",children:"6. Deep Dive: Data Sync, Real-Time, and Offline"}),"\n",(0,r.jsx)(n.h3,{id:"client-database",children:"Client Database"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IndexedDB:"})," Structured, persistent, cross-tab storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"BroadcastChannel API:"})," Sync changes across tabs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sync on load:"})," Last update timestamp or per-conversation cursor"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Out-of-order:"})," Insert by timestamp, deduplicate"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Drafts:"})," Persist unsent messages, recover after reload"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"real-time-updates",children:"Real-Time Updates"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"WebSockets:"})," Preferred for real-time, bidirectional communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Long Polling/Short Polling:"})," Fallbacks, less efficient"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server events:"})," Push new messages, status updates, sync events"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reconnect:"})," Auto-reconnect, exponential backoff"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"network--offline",children:"Network & Offline"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Offline detection:"})," Queue outgoing messages, mark as pending"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Retry:"})," Exponential backoff, fail after N attempts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Batching:"})," Send multiple messages in one payload if sent in quick succession"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Conflict resolution:"})," Server is source of truth, client merges"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sync on reconnect:"})," Fetch missed messages, resolve conflicts"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Failed messages:"})," Show error, allow manual retry"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stale clients:"})," Full sync or partial fetch (latest N messages)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unsupported environments:"})," Handle private/incognito, storage limits"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-performance-scalability-and-reliability",children:"7. Performance, Scalability, and Reliability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Windowing/virtualization:"})," For long message lists"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lazy loading:"})," Emoji picker, popovers, modals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimistic UI:"})," Show messages as sent before server confirmation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Efficient rendering:"})," Only update changed parts of UI"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimize bundle size:"})," Fast load, code splitting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Horizontal scaling:"})," Stateless APIs, sharded DBs, message queues"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitoring:"})," Real-time metrics, alerting"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-security--privacy",children:"8. Security & Privacy"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTPS:"})," All communication encrypted"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication:"})," Secure login, JWT/session tokens"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"End-to-end encryption:"})," (Advanced) for privacy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API security:"})," Auth, rate limiting, CORS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"XSS/CSRF:"})," Input validation, secure cookies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Session management:"})," Secure, httpOnly, sameSite"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Privacy:"})," GDPR/CCPA compliance, user data rights"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"9-accessibility",children:"9. Accessibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Keyboard shortcuts:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enter to send, Shift+Enter for new line"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl/Cmd+Up/Down to switch conversations"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl/Cmd+number to jump to nth conversation"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Screen reader support:"})," Proper ARIA roles, labels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Focus management:"})," Maintain focus in input, restore after send"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Color contrast:"})," Sufficient for all users"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Message status indicators:"})," Accessible icons, text"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"10-user-experience-ux",children:"10. User Experience (UX)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scroll position:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep at bottom for new messages"}),"\n",(0,r.jsx)(n.li,{children:"Maintain position when loading older messages"}),"\n",(0,r.jsx)(n.li,{children:"Handle window resize, media load, zoom"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scroll to bottom button:"})," Show when user scrolls up"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Message status indicators:"})," Show sending, sent, delivered, read, failed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Draft recovery:"})," Restore unsent messages after reload"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive design:"})," Works on desktop and mobile"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gradient effects:"})," Messenger-style chat bubble gradients (",(0,r.jsx)(n.a,{href:"https://css-tricks.com/recreating-the-facebook-messenger-gradient-effect-with-css/",children:"CSS Tricks"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Notifications:"})," Browser notifications for new messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Typing indicators, reactions, disappearing messages:"})," (Advanced)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"11-internationalization-i18n",children:"11. Internationalization (i18n)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-language UI:"})," Translate all labels, error messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RTL support:"})," Layout mirroring, logical CSS properties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Date/time:"})," Localized formats"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Emoji support:"})," Unicode, fallback images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Accessibility:"})," Localized ARIA labels"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"12-analytics-observability-and-ab-testing",children:"12. Analytics, Observability, and A/B Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analytics:"})," Track message send/receive, delivery times, errors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"A/B testing:"})," UI, retry strategies, notification styles"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error reporting:"})," Sentry, custom logging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance monitoring:"})," Real user metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Privacy:"})," Anonymized data, opt-out options"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"13-advanced-topics",children:"13. Advanced Topics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Search:"})," Hybrid online/offline search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"End-to-end encryption:"})," Security and privacy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Delivery/read receipts:"})," Real-time status"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Reactions, typing indicators, disappearing messages, notifications"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Handling stale clients:"})," Full sync or partial fetch"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Internationalization (i18n):"})," Multi-language support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Push notifications:"})," Mobile/desktop"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rich media:"})," Images, files, voice notes"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"14-references",children:"14. References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Facebook & Messenger"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://engineering.fb.com/2022/07/26/web/launching-instagram-messaging-on-desktop/",children:"Launching Instagram Messaging on desktop"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.facebook.com/notes/10158791547142200/",children:"Building Facebook Messenger"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://intuitiveexplanations.com/tech/messenger",children:"Reverse engineering the Facebook Messenger API"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://softwareengineeringdaily.com/2020/03/31/facebook-messenger-engineering-with-mohsen-agsen/",children:"Facebook Messenger Engineering with Mohsen Agsen"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=ulVLD2yzCrc",children:"F8 2019: Facebook: Lighter, Faster, Simpler Messenger"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=ODkEWsO5I30",children:"Building Real Time Infrastructure at Facebook - SRECon2017"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=F7UWvflUZoc",children:"Facebook Messenger RTC \u2013 The Challenges and Opportunities of Scale"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://engineering.fb.com/2014/10/09/production-engineering/building-mobile-first-infrastructure-for-messenger/",children:"Building Mobile-First Infrastructure for Messenger"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=eADBCKKf8PA",children:"MySQL for Message - @Scale 2014 - Data"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://engineering.fb.com/2020/03/02/data-infrastructure/messenger/",children:"Project LightSpeed: Rewriting the Messenger codebase"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Slack"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://slack.engineering/managing-focus-transitions-in-slack/",children:"Managing Focus Transitions in Slack"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://slack.engineering/gantry-slacks-fast-booting-frontend-framework/",children:"Gantry: Slack\u2019s Fast-booting Frontend Framework"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://slack.engineering/making-slack-faster-by-being-lazy/",children:"Making Slack Faster By Being Lazy"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://slack.engineering/making-slack-faster-by-being-lazy-part-2/",children:"Making Slack Faster By Being Lazy: Part 2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://slack.engineering/getting-to-slack-faster-with-incremental-boot/",children:"Getting to Slack faster with incremental boot"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://slack.engineering/service-workers-at-slack-our-quest-for-faster-boot-times-and-offline-support/",children:"Service Workers at Slack: Our Quest for Faster Boot Times and Offline Support"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://slack.engineering/localizing-slack/",children:"Localizing Slack"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Airbnb"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://medium.com/airbnb-engineering/messaging-sync-scaling-mobile-messaging-at-airbnb-659142036f06",children:"Messaging Sync \u2014 Scaling Mobile Messaging at Airbnb"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"General"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://ably.com/blog/websockets-vs-long-polling",children:"WebSockets vs Long Polling"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://web.dev/indexeddb-best-practices/",children:"Best Practices for Using IndexedDB"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://css-tricks.com/recreating-the-facebook-messenger-gradient-effect-with-css/",children:"CSS Tricks: Messenger Gradient Effect"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"This document provides an exhaustive, technical overview of the design and implementation of a modern chat application frontend. It covers architectural decisions, data modeling, real-time messaging, offline/online sync, performance, accessibility, security, analytics, advanced features, and real-world trade-offs, serving as a reference for advanced system design interviews and production-grade implementations."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);