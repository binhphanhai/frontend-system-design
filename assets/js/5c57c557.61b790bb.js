"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3123],{4653:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"pinterest","title":"Pinterest System Design: Masonry Layout and Feed","description":"System design interview question: Design the Pinterest homepage, focusing on the masonry layout and infinite feed.","source":"@site/docs/09-pinterest.md","sourceDirName":".","slug":"/pinterest","permalink":"/frontend-system-design/docs/pinterest","draft":false,"unlisted":false,"editUrl":"https://github.com/binhphanhai/frontend-system-design/tree/main/Summarize/docs/09-pinterest.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Chat Application System Design (e.g. Messenger)","permalink":"/frontend-system-design/docs/chat-app"},"next":{"title":"Rich Text Editor System Design","permalink":"/frontend-system-design/docs/rich-text-editor"}}');var r=i(4848),l=i(8453);const t={},a="Pinterest System Design: Masonry Layout and Feed",o={},d=[{value:"1. Problem Overview &amp; Requirements Exploration",id:"1-problem-overview--requirements-exploration",level:2},{value:"Core Features",id:"core-features",level:3},{value:"Glossary",id:"glossary",level:3},{value:"2. High-Level Architecture",id:"2-high-level-architecture",level:2},{value:"Rendering Strategy",id:"rendering-strategy",level:3},{value:"Component Responsibilities",id:"component-responsibilities",level:3},{value:"3. Data Model",id:"3-data-model",level:2},{value:"4. API &amp; Interface Definition",id:"4-api--interface-definition",level:2},{value:"Feed API",id:"feed-api",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Sample Response",id:"sample-response",level:4},{value:"5. Masonry Layout Implementation",id:"5-masonry-layout-implementation",level:2},{value:"Layout Approaches",id:"layout-approaches",level:3},{value:"Example: Absolute Positioning",id:"example-absolute-positioning",level:4},{value:"Pin Ordering Algorithms",id:"pin-ordering-algorithms",level:3},{value:"Height Balancing Algorithm (JS)",id:"height-balancing-algorithm-js",level:4},{value:"Responsiveness",id:"responsiveness",level:3},{value:"6. List Virtualization",id:"6-list-virtualization",level:2},{value:"Example: Virtualized List (Pseudo-React)",id:"example-virtualized-list-pseudo-react",level:4},{value:"7. Resource Loading &amp; Optimization",id:"7-resource-loading--optimization",level:2},{value:"SSR for Initial Load",id:"ssr-for-initial-load",level:3},{value:"Image Loading",id:"image-loading",level:3},{value:"Paint Scheduling",id:"paint-scheduling",level:3},{value:"Performance Techniques",id:"performance-techniques",level:3},{value:"8. User Experience &amp; Accessibility",id:"8-user-experience--accessibility",level:2},{value:"Loading States",id:"loading-states",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Accessibility",id:"accessibility",level:3},{value:"Internationalization",id:"internationalization",level:3},{value:"9. Advanced Interactions",id:"9-advanced-interactions",level:2},{value:"10. Progressive Web App (PWA) Features",id:"10-progressive-web-app-pwa-features",level:2},{value:"11. Real-World Challenges &amp; Trade-offs",id:"11-real-world-challenges--trade-offs",level:2},{value:"Layout",id:"layout",level:3},{value:"Virtualization",id:"virtualization",level:3},{value:"Image Loading",id:"image-loading-1",level:3},{value:"Accessibility",id:"accessibility-1",level:3},{value:"SEO",id:"seo",level:3},{value:"12. References &amp; Further Reading",id:"12-references--further-reading",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"pinterest-system-design-masonry-layout-and-feed",children:"Pinterest System Design: Masonry Layout and Feed"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"System design interview question: Design the Pinterest homepage, focusing on the masonry layout and infinite feed."})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["Pinterest is a leading example of a visually rich, highly interactive web application. Its homepage features a ",(0,r.jsx)(n.strong,{children:"masonry layout"}),'\u2014a grid where items ("pins") of varying heights are arranged to optimize space and visual appeal. This document provides an in-depth system design for such a feed, covering requirements, architecture, data modeling, API, layout algorithms, virtualization, performance, accessibility, and more.']}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-problem-overview--requirements-exploration",children:"1. Problem Overview & Requirements Exploration"}),"\n",(0,r.jsx)(n.h3,{id:"core-features",children:"Core Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Masonry layout"}),": Display pins in a grid with variable heights, minimizing vertical gaps."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Infinite scrolling"}),": Seamless loading of additional pins as the user scrolls."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Order preservation"}),": Pins must appear in the order returned by the backend feed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Image-centric"}),": Focus on images (not videos/GIFs for this scope)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive"}),": Usable and visually consistent on desktop, mobile, and tablet."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Accessibility"}),": Keyboard navigation, screen reader support, and correct tab order."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": Fast initial load, smooth scrolling, and efficient resource usage."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Progressive enhancement"}),": Works with/without JavaScript, degrades gracefully."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"glossary",children:"Glossary"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pin"}),": A content item (image, metadata, etc.) in the feed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Feed"}),": The ordered list of pins returned by the backend."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-high-level-architecture",children:"2. High-Level Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"rendering-strategy",children:"Rendering Strategy"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hybrid SSR/CSR"}),": Use ",(0,r.jsx)(n.strong,{children:"Server-Side Rendering (SSR)"})," for the initial page load (improves SEO, time-to-content, and social sharing), then hydrate and switch to ",(0,r.jsx)(n.strong,{children:"Client-Side Rendering (CSR)"})," for interactivity and infinite scrolling."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SPA (Single-Page Application)"}),": The homepage and pin details are managed as a SPA to preserve scroll position, enable fast navigation, and cache in-memory data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hydration"}),": Initial HTML includes markup and data for pins; client JS calculates layout and attaches event handlers."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"component-responsibilities",children:"Component Responsibilities"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://www.gfecdn.net/img/questions/pinterest/pinterest-architecture.png",alt:"Pinterest Architecture Diagram"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server"}),": Provides HTTP APIs for fetching pins and paginated data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client Store"}),": Caches all loaded pins and feed data in memory (e.g., Redux, Zustand, or React Context)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Homepage"}),": Hosts the Masonry component and manages feed state, scroll, and pagination."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Masonry Component"}),": Arranges pins in a masonry layout, handles virtualization, and manages layout calculations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pin Component"}),": Renders individual pins, handles image loading, error states, and accessibility."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-data-model",children:"3. Data Model"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Entity"}),(0,r.jsx)(n.th,{children:"Source"}),(0,r.jsx)(n.th,{children:"Belongs to"}),(0,r.jsx)(n.th,{children:"Fields"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Feed"}),(0,r.jsx)(n.td,{children:"Server"}),(0,r.jsx)(n.td,{children:"Homepage"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"pins"})," (list of ",(0,r.jsx)(n.code,{children:"Pin"}),"s), ",(0,r.jsx)(n.code,{children:"pagination"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Pin"}),(0,r.jsx)(n.td,{children:"Server"}),(0,r.jsx)(n.td,{children:"Homepage"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"id"}),", ",(0,r.jsx)(n.code,{children:"created_time"}),", ",(0,r.jsx)(n.code,{children:"image_url"}),", ",(0,r.jsx)(n.code,{children:"alt_text"}),", ",(0,r.jsx)(n.code,{children:"dominant_color"}),", ..."]})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pinterest-specific data:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Image dimensions"}),": Used for layout calculation and aspect ratio preservation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ordering"}),": Maintains the order of pins as returned by the backend."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive image URLs"}),": Multiple URLs for different device sizes (e.g., ",(0,r.jsx)(n.code,{children:"srcset"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pin state"}),": Tracks loading, painted, and error states for each pin."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dominant color"}),": Used for placeholder backgrounds while images load."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-api--interface-definition",children:"4. API & Interface Definition"}),"\n",(0,r.jsx)(n.h3,{id:"feed-api",children:"Feed API"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HTTP Method"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GET"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Path"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/feed"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Description"}),(0,r.jsx)(n.td,{children:"Fetches pins"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"size"}),(0,r.jsx)(n.td,{children:"number"}),(0,r.jsx)(n.td,{children:"Number of results per page"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"cursor"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Identifier for last item fetched"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response",children:"Sample Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "pagination": { "size": 20, "next_cursor": "=dXNlcjpVMEc5V0ZYTlo" },\r\n  "pins": [\r\n    {\r\n      "id": 123,\r\n      "created_at": "Sun, 01 Oct 2023 17:59:58 +0000",\r\n      "alt_text": "Pixel art turnip",\r\n      "dominant_color": "#ffd4ec",\r\n      "image_url": "https://www.greatcdn.com/img/941b3f3d917f598577b4399b636a5c26.jpg"\r\n      // ... more metadata\r\n    }\r\n    // ... more pins\r\n  ]\r\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pagination"}),": Cursor-based for infinite scrolling, avoids issues with offset-based pagination (e.g., duplicates, missing items)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-masonry-layout-implementation",children:"5. Masonry Layout Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"layout-approaches",children:"Layout Approaches"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Row of columns (Flexbox/Grid)"}),": Simple, but poor for keyboard navigation and accessibility. Columns may become unbalanced."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Absolute positioning"}),": Calculate exact ",(0,r.jsx)(n.code,{children:"top"})," and ",(0,r.jsx)(n.code,{children:"left"})," for each pin. Allows for correct tab order, easier virtualization, and better performance. Pinterest uses CSS transforms for positioning."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-absolute-positioning",children:"Example: Absolute Positioning"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<div class="container">\r\n  <div class="item" style="height:250px; top:0; left:0;">1</div>\r\n  <div class="item" style="height:300px; top:0; left:80px;">2</div>\r\n  \x3c!-- ... --\x3e\r\n</div>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pin-ordering-algorithms",children:"Pin Ordering Algorithms"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Round robin"}),": Place pins in columns in order. Simple, but can lead to unbalanced columns."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Height balancing"}),": Place each pin in the shortest column. Produces a more visually pleasing, balanced layout."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"height-balancing-algorithm-js",children:"Height Balancing Algorithm (JS)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const NUM_COLS = 3;\r\nconst columnHeights = Array(NUM_COLS).fill(0);\r\npins.forEach(pin => {\r\n  let shortestCol = columnHeights.indexOf(Math.min(...columnHeights));\r\n  // Set pin position based on shortestCol\r\n  columnHeights[shortestCol] += pin.height;\r\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"responsiveness",children:"Responsiveness"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recalculate positions on window resize (debounced for performance)."}),"\n",(0,r.jsx)(n.li,{children:"Pre-calculate positions for common breakpoints (mobile, tablet, desktop)."}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"srcset"})," and responsive image sizes for optimal loading."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-list-virtualization",children:"6. List Virtualization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why"}),": Rendering hundreds/thousands of pins in the DOM is slow and memory-intensive."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"How"}),": Only render pins visible in the viewport (plus a small buffer above/below for smooth scrolling)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pinterest"}),": Keeps ~40 pins in the DOM on desktop, ~10-20 on mobile."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Container height"}),": Set to the tallest column, so removing offscreen pins doesn't affect scroll position."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://www.gfecdn.net/img/questions/pinterest/pinterest-virtualization-video.mp4",alt:"Pinterest Virtualization"})}),"\n",(0,r.jsx)(n.h4,{id:"example-virtualized-list-pseudo-react",children:"Example: Virtualized List (Pseudo-React)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<Masonry\r\n  items={visiblePins}\r\n  containerHeight={tallestColumnHeight}\r\n  onScroll={handleScroll}\r\n/>\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-resource-loading--optimization",children:"7. Resource Loading & Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"ssr-for-initial-load",children:"SSR for Initial Load"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pins and images are included in the initial HTML for fast first paint and SEO."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"image-loading",children:"Image Loading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Preloading"}),": Use ",(0,r.jsx)(n.code,{children:'<link rel="preload">'})," for critical images."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Progressive JPEGs"}),": Images load blurry and sharpen as more data arrives."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive images"}),": Use ",(0,r.jsx)(n.code,{children:"srcset"})," and multiple image sizes for different devices."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Image formats"}),": JPEG for compatibility, WebP for performance if supported."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dominant color placeholders"}),": Show a colored box while the image loads, reducing layout shift and perceived latency."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"paint-scheduling",children:"Paint Scheduling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default"}),": Render all ",(0,r.jsx)(n.code,{children:"<img>"})," tags; images appear as they load (can be jarring on slow networks)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ideal"}),": Load images in parallel, but paint them in order so earlier pins appear first. Use React Suspense/SuspenseList for coordination."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-techniques",children:"Performance Techniques"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Batch DOM changes to reduce reflows/repaints."}),"\n",(0,r.jsx)(n.li,{children:"Use CSS transforms for positioning (GPU-accelerated)."}),"\n",(0,r.jsx)(n.li,{children:"Debounce/throttle layout recalculation on resize."}),"\n",(0,r.jsx)(n.li,{children:"List virtualization to keep DOM size small."}),"\n",(0,r.jsx)(n.li,{children:"Lazy load code for non-essential actions (e.g., modals, pin creation)."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-user-experience--accessibility",children:"8. User Experience & Accessibility"}),"\n",(0,r.jsx)(n.h3,{id:"loading-states",children:"Loading States"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use dominant color as a placeholder while images load."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://www.gfecdn.net/img/questions/pinterest/pinterest-loading.png",alt:"Pinterest Loading State"})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ignore failed images, retry, or show an error message."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"accessibility",children:"Accessibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"alt"})," for images, ",(0,r.jsx)(n.code,{children:'role="list"'})," for container, ",(0,r.jsx)(n.code,{children:'role="listitem"'})," for pins."]}),"\n",(0,r.jsx)(n.li,{children:"Ensure tab order matches visual order (especially with absolute positioning)."}),"\n",(0,r.jsx)(n.li,{children:"Keyboard navigation: Allow users to move between pins using arrow/tab keys."}),"\n",(0,r.jsx)(n.li,{children:"Screen reader support: Announce pin metadata and actions."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"internationalization",children:"Internationalization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"For RTL (right-to-left) languages, start layout from the right and mirror column order."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"9-advanced-interactions",children:"9. Advanced Interactions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pin details modal"}),": Open pin details in a modal, preserving scroll position and background state."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimistic updates"}),": When saving/creating pins, update UI immediately and reconcile with server response."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Infinite scroll"}),": Trigger API calls as the user nears the bottom of the feed, with loading spinners and error recovery."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PWA features"}),": Pinterest is a Progressive Web App, offering offline access, push notifications, and fast loading."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"10-progressive-web-app-pwa-features",children:"10. Progressive Web App (PWA) Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Offline support"}),": Cache assets and data for offline browsing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Push notifications"}),": Engage users with updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add to home screen"}),": Installable on mobile devices."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": Fast load times, even on slow networks."]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://medium.com/dev-channel/a-pinterest-progressive-web-app-performance-case-study-3bd6ed2e6154",children:"PWA case study"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://medium.com/pinterest-engineering/a-one-year-pwa-retrospective-f4a2f4129e05",children:"PWA retrospective"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"11-real-world-challenges--trade-offs",children:"11. Real-World Challenges & Trade-offs"}),"\n",(0,r.jsx)(n.h3,{id:"layout",children:"Layout"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Absolute positioning"}),": Best for performance and accessibility, but requires careful calculation and reflow management."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexbox/Grid"}),": Easier to implement, but less control over tab order and virtualization."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"virtualization",children:"Virtualization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Windowing"}),": Only render visible items, but must manage container height and scroll position."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Recycling"}),": Reuse DOM nodes for offscreen pins to reduce memory usage."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"image-loading-1",children:"Image Loading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Progressive loading"}),": Improves perceived performance, but may require additional image processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive images"}),": Increases complexity, but saves bandwidth and improves UX."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"accessibility-1",children:"Accessibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tab order"}),": Must match visual order, especially with absolute positioning."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Screen readers"}),": Provide meaningful metadata and ARIA roles."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"seo",children:"SEO"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SSR"}),": Ensures content is indexable by search engines."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hydration"}),": Must match server and client markup to avoid flicker."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"12-references--further-reading",children:"12. References & Further Reading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://gestalt.pinterest.systems/web/masonry",children:"Pinterest Masonry component"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry.js",children:"Masonry source code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry/README.md",children:"How Masonry works"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://medium.com/pinterest-engineering/improving-gif-performance-on-pinterest-8dad74bf92f1",children:"Improving GIF performance on Pinterest"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"This document provides a comprehensive, technical overview of the Pinterest homepage system design, focusing on the unique challenges and solutions for implementing a performant, accessible, and visually appealing masonry layout feed. It covers architectural decisions, layout algorithms, virtualization, resource loading, user experience, accessibility, and real-world trade-offs, serving as a reference for advanced system design interviews and real-world implementations."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);