"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6130],{3488:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"react-interview/thinking-declaratively-summary","title":"05-thinking-declaratively: Summary","description":"---","source":"@site/docs/react-interview/05-thinking-declaratively-summary.md","sourceDirName":"react-interview","slug":"/react-interview/thinking-declaratively-summary","permalink":"/frontend-system-design/docs/react-interview/thinking-declaratively-summary","draft":false,"unlisted":false,"editUrl":"https://github.com/binhphanhai/frontend-system-design/tree/main/Summarize/docs/react-interview/05-thinking-declaratively-summary.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"summarySidebar","previous":{"title":"04-basic-react-concepts: Summary","permalink":"/frontend-system-design/docs/react-interview/basic-react-concepts-summary"},"next":{"title":"06-designing-state: Summary","permalink":"/frontend-system-design/docs/react-interview/designing-state-summary"}}');var r=t(4848),s=t(8453);const a={},l="05-thinking-declaratively: Summary",c={},o=[];function d(e){const n={blockquote:"blockquote",br:"br",h1:"h1",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"05-thinking-declaratively-summary",children:"05-thinking-declaratively: Summary"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Interviewer\u2019s Intention"}),(0,r.jsx)(n.br,{}),"\n","Goal: Assess your understanding of declarative programming in React and your ability to apply it in UI design."]}),"\n",(0,r.jsx)(n.p,{children:"Want to see:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If you can explain the difference between declarative and imperative code."}),"\n",(0,r.jsx)(n.li,{children:"How you structure UIs using React\u2019s declarative model."}),"\n",(0,r.jsx)(n.li,{children:"If you can refactor imperative code to declarative patterns."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Answer Framework"})]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Declarative vs. Imperative"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Declarative: describe what UI should look like (React, JSX)"}),"\n",(0,r.jsx)(n.li,{children:"Imperative: describe how to update UI step by step (DOM APIs)"}),"\n",(0,r.jsx)(n.li,{children:"React encourages declarative: state drives UI, not manual DOM updates"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actionable Checklist"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use state/props to drive rendering"}),"\n",(0,r.jsx)(n.li,{children:"Avoid manual DOM manipulation (except refs/effects)"}),"\n",(0,r.jsx)(n.li,{children:"Refactor imperative code to declarative patterns"}),"\n",(0,r.jsx)(n.li,{children:"Practice with conditional rendering, lists, derived state"}),"\n",(0,r.jsx)(n.li,{children:"Explain benefits: less error-prone, easier to reason about, more maintainable"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Example Content / Model Answer"})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u201cReact is declarative: I describe what the UI should look like based on state, and React updates the DOM. I avoid manual DOM manipulation and use state/props to drive rendering. This makes code easier to reason about and maintain. I practice by refactoring imperative code to declarative patterns.\u201d"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pro Tips / Common Pitfalls"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Don\u2019t use refs for most DOM updates\u2014prefer state-driven rendering."}),"\n",(0,r.jsx)(n.li,{children:"Practice explaining declarative vs. imperative to others."}),"\n",(0,r.jsx)(n.li,{children:"Use examples to illustrate your points."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);