"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3756],{7422:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"frontend-interview/user-interface-coding-interviews","title":"User Interface Coding Interviews","description":"Best practices while interviewing, important concepts to know, and critical practice questions to do","source":"@site/docs/frontend-interview/05-user-interface-coding-interviews.md","sourceDirName":"frontend-interview","slug":"/frontend-interview/user-interface-coding-interviews","permalink":"/frontend-system-design/docs/frontend-interview/user-interface-coding-interviews","draft":false,"unlisted":false,"editUrl":"https://github.com/binhphanhai/frontend-system-design/tree/main/Summarize/docs/frontend-interview/05-user-interface-coding-interviews.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"frontendInterviewSidebar","previous":{"title":"Data Structures and Algorithms Interviews","permalink":"/frontend-system-design/docs/frontend-interview/data-structures-algorithms-interviews"},"next":{"title":"Cheatsheet for UI Interview Questions","permalink":"/frontend-system-design/docs/frontend-interview/ui-interview-cheatsheet"}}');var r=i(4848),t=i(8453);const o={},a="User Interface Coding Interviews",c={},l=[{value:"What Are User Interface Coding Interviews?",id:"what-are-user-interface-coding-interviews",level:2},{value:"Types of User Interface Questions",id:"types-of-user-interface-questions",level:2},{value:"User Interface Components/Widgets/Layouts",id:"user-interface-componentswidgetslayouts",level:3},{value:"Apps/Games",id:"appsgames",level:3},{value:"What to Do During User Interface Coding Interviews",id:"what-to-do-during-user-interface-coding-interviews",level:2},{value:"How to Prepare for User Interface Coding Interviews",id:"how-to-prepare-for-user-interface-coding-interviews",level:2},{value:"Important Concepts",id:"important-concepts",level:2},{value:"Evaluation Axes",id:"evaluation-axes",level:2},{value:"Best Practice Questions",id:"best-practice-questions",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"user-interface-coding-interviews",children:"User Interface Coding Interviews"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Best practices while interviewing, important concepts to know, and critical practice questions to do"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"what-are-user-interface-coding-interviews",children:"What Are User Interface Coding Interviews?"}),"\n",(0,r.jsx)(n.p,{children:"User interface coding interviews will involve candidates writing HTML, CSS, and JavaScript to complete tasks. This is essential for evaluating the skills of Front End Engineers, and more companies are moving towards asking candidates to code user interfaces during interviews."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"types-of-user-interface-questions",children:"Types of User Interface Questions"}),"\n",(0,r.jsx)(n.p,{children:"The user interfaces that candidates are asked to code can range from really small UI components to more complex client-facing products like small apps and games."}),"\n",(0,r.jsx)(n.h3,{id:"user-interface-componentswidgetslayouts",children:"User Interface Components/Widgets/Layouts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Components: ",(0,r.jsx)(n.a,{href:"/questions/user-interface/accordion",children:"Accordion"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/tabs",children:"Tabs"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/star-rating",children:"Star Rating Widget"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/tweet",children:"Tweet"}),", Image Carousel"]}),"\n",(0,r.jsxs)(n.li,{children:["Widgets: ",(0,r.jsx)(n.a,{href:"/questions/user-interface/digital-clock",children:"Digital Clock"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/analog-clock",children:"Analog Clock"})]}),"\n",(0,r.jsxs)(n.li,{children:["Page Sections: ",(0,r.jsx)(n.a,{href:"/questions/user-interface/signup-form",children:"Signup Form"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/holy-grail",children:"Holy Grail"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"appsgames",children:"Apps/Games"}),"\n",(0,r.jsx)(n.p,{children:"The time allowed for apps/games questions is usually longer than components/widgets. Depending on how complex the question is, you may spend up to half an hour or even an hour to complete the question, especially if you are asked to build games."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Apps: ",(0,r.jsx)(n.a,{href:"/questions/user-interface/todo-list",children:"Todo List"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/stopwatch",children:"Stopwatch"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/temperature-converter",children:"Temperature Converter"})]}),"\n",(0,r.jsxs)(n.li,{children:["Games: ",(0,r.jsx)(n.a,{href:"/questions/user-interface/tic-tac-toe",children:"Tic-tac-toe"}),", ",(0,r.jsx)(n.a,{href:"/questions/user-interface/whack-a-mole",children:"Whack-a-mole"}),", Snake, Tetris, Minesweeper, Connect 4"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Most games will be 2D grid-based games. Make sure you know how to create grid layouts in HTML and CSS!"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"what-to-do-during-user-interface-coding-interviews",children:"What to Do During User Interface Coding Interviews"}),"\n",(0,r.jsx)(n.p,{children:"User interface coding interviews share a fair bit of similarity with non-front end coding interviews. In general, you should:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Find out what is available"}),": Find out what platform you are coding on and familiarize yourself with the coding environment:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Whether you will be using a local IDE or an online one. If local IDE, will you be using your own laptop?"}),"\n",(0,r.jsx)(n.li,{children:"The supported editor shortcuts"}),"\n",(0,r.jsx)(n.li,{children:"Whether you can use JavaScript libraries/framework or have to use vanilla JavaScript"}),"\n",(0,r.jsx)(n.li,{children:"Whether you can execute code and preview the UI"}),"\n",(0,r.jsx)(n.li,{children:"What are the latest supported JavaScript syntax and language features?"}),"\n",(0,r.jsx)(n.li,{children:"Whether you can install dependencies beforehand"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Self introduction"}),": Make your self introduction under a minute. Unless requested, do not take longer than this otherwise you might not have enough time to code."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clarify question"}),": Ask clarifying questions upon receiving the question. Clarify the following:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Can you use the newest JavaScript syntax?"}),"\n",(0,r.jsx)(n.li,{children:"Browser support, as this will affect the browser APIs you can use"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Manage complexity"}),": Break down the problem into stages/milestones that build on top of each other. Communicate this breakdown to your interviewer. Unlike coding interviews, the focus of User Interface coding interviews is usually around the component states and APIs as opposed to complex data structures and algorithms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start coding"}),": Code out your solution and explain your code to your interviewer while you are coding","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Where possible, test your code in the browser after every milestone/feature added, instead of only at the end"}),"\n",(0,r.jsxs)(n.li,{children:["Refer to the ",(0,r.jsx)(n.a,{href:"/front-end-interview-playbook/user-interface-questions-cheatsheet",children:"User Interface Questions Cheatsheet"})," for a list of things to take note of during User Interface coding interviews"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Review your code"}),": After coding, read through your code once and try to spot basic errors like typos, using variables before initializing them, using APIs incorrectly, etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": Outline some basic test cases and some edge cases. Test your code with these cases and determine if your code passes them. If it fails, debug the issue(s) and fix them"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tradeoff"}),": Explain any tradeoffs you made, cases you explicitly didn't handle, and how you would improve the code if you had more time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Follow-ups"}),": The interview might not end here, the interviewer might have follow-up questions for you on this question or give you another question. Be prepared for them"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"how-to-prepare-for-user-interface-coding-interviews",children:"How to Prepare for User Interface Coding Interviews"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Core concepts"}),": Be familiar with the topics under the ",(0,r.jsx)(n.a,{href:"#important-concepts",children:"Important concepts"})," section below. The ",(0,r.jsx)(n.a,{href:"/front-end-interview-playbook/quiz",children:"Quiz section"})," can also be a good start since you might be asked on these concepts in the form of quiz questions during coding."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Practice writing UI"}),": It's best to learn how to build UIs in both Vanilla JavaScript and a UI framework of choice. Most companies will allow using JavaScript UI frameworks but some companies (e.g. Google) mandate that you can only use Vanilla JavaScript","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vanilla JavaScript"}),": Learn the DOM manipulation APIs. At the very least you should know how to create new DOM elements, add classes/attributes to them, and add child elements. If you come from a ",(0,r.jsx)(n.a,{href:"https://jquery.com/",children:"jQuery"})," background, check out ",(0,r.jsx)(n.a,{href:"https://youmightnotneedjquery.com/",children:"You might not need jQuery"}),", a website showing you how to accomplish the common jQuery operations in Vanilla JavaScript. With modern browser APIs there isn't really much need for jQuery anymore."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"JavaScript UI framework"}),": Be familiar with a UI framework of choice. Stick with the framework that you are most familiar with. There's no need and also probably not enough time to learn a new framework. If you are new to JavaScript UI frameworks, ",(0,r.jsx)(n.a,{href:"https://react.dev/",children:"React"})," will be our recommendation as it is the most popular library/framework to build UI right now and what most companies look for when hiring front end engineers."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CSS"}),": Be familiar with writing CSS under interview conditions (small questions which won't require writing that much CSS):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Write Vanilla CSS"}),": Learn to write CSS without reliance on preprocessors like Sass/Less. Not all coding environments will allow using processors and interview questions are likely small and do not really benefit from the features CSS preprocessors bring. The most useful feature of CSS processors is the use of variables, which is available natively via CSS custom properties (CSS variables)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Adopt a CSS naming convention"}),": Consider adopting a CSS naming methodology like ",(0,r.jsx)(n.a,{href:"https://getbem.com/",children:"Block Element Modifier"})," when writing your classes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deep dives"}),": Read our User Interface coding deep dive guides:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/front-end-interview-playbook/user-interface-questions-cheatsheet",children:"User Interface Questions Cheatsheet"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/front-end-interview-playbook/user-interface-components-api-design-principles",children:"User Interface Components API Design Principles"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"More practice"}),": Try out ",(0,r.jsx)(n.a,{href:"/interviews/gfe75",children:"GFE 75"})," or pick a ",(0,r.jsx)(n.a,{href:"/interviews/study-plans",children:"study plan"})," and practice the ",(0,r.jsx)(n.a,{href:"/questions/formats/ui-coding",children:"User Interface coding questions"})," recommended for the selected study plan.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Spend roughly equal amount of time practicing building both UI components and building apps/games. Both are equally important."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"important-concepts",children:"Important Concepts"}),"\n",(0,r.jsx)(n.p,{children:"Be familiar with these web development concepts:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Category"}),(0,r.jsx)(n.th,{children:"Important topics"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Data structures"}),(0,r.jsx)(n.td,{children:"Arrays, Maps, Stacks, Trees, Sets"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Software engineering"}),(0,r.jsx)(n.td,{children:"SOLID principles, Design patterns, Model-View-Controller"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HTML"}),(0,r.jsx)(n.td,{children:"Semantic HTML, Form validation, Form submission"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CSS"}),(0,r.jsx)(n.td,{children:"Box model, Selectors, Specificity, Positioning, Units, Flexbox, Grid, CSS custom properties"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"JavaScript"}),(0,r.jsxs)(n.td,{children:["Closures, Callbacks, ",(0,r.jsx)(n.code,{children:"Promise"}),", ",(0,r.jsx)(n.code,{children:"async"}),"/",(0,r.jsx)(n.code,{children:"await"}),", Handling variadic arguments"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DOM"}),(0,r.jsx)(n.td,{children:"DOM traversal, creation, manipulation, element/node properties, Event delegation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Runtime APIs"}),(0,r.jsxs)(n.td,{children:["Timer \u2014 ",(0,r.jsx)(n.code,{children:"setTimeout()"}),", ",(0,r.jsx)(n.code,{children:"setInterval()"}),", Networking \u2014 Ajax, ",(0,r.jsx)(n.code,{children:"fetch()"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Accessibility"}),(0,r.jsx)(n.td,{children:"ARIA roles, states & properties, Keyboard interactions"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"evaluation-axes",children:"Evaluation Axes"}),"\n",(0,r.jsx)(n.p,{children:"User interface coding interviews have similar rubrics as JavaScript coding interviews as both involve coding in the front end domain. However, user interface coding questions will have even more emphasis on domain expertise and the various front end topics."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Problem solving"}),": Use a systematic and logical approach to understanding and addressing a problem. Break down the problem into smaller independent problems. Evaluate different approaches and their tradeoffs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Software engineering foundation"}),": Familiarity with data structures, algorithms, runtime complexity analysis, use of design patterns, design solution with clean abstractions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Domain expertise"}),": Understanding of the front end domain and the relevant languages: Browser (DOM and DOM APIs), HTML, CSS, JavaScript, User Experience, Accessibility, i18n, Networks, Performance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Communication"}),": Ask questions to clarify details and clearly explaining one's approach and considerations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Verification"}),": Identify various scenarios to test the code against, including edge cases. Be able to diagnose and fix any issues that arise"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"best-practice-questions",children:"Best Practice Questions"}),"\n",(0,r.jsx)(n.p,{children:"From experience, the best UI interview questions to practice, as determined by frequency and important concepts covered are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/todo-list",children:"Todo List"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/signup-form",children:"Signup Form"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/temperature-converter",children:"Temperature Converter"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/progress-bar",children:"Progress Bar"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/analog-clock",children:"Analog Clock"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/job-board",children:"Job Board"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/data-table",children:"Data Table"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/whack-a-mole",children:"Whack-a-mole"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/tic-tac-toe",children:"Tic-tac-toe"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/tabs",children:"Tabs"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/image-carousel",children:"Image Carousel"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/questions/user-interface/modal-dialog",children:"Modal Dialog"})}),"\n",(0,r.jsx)(n.li,{children:"Autocomplete"}),"\n",(0,r.jsx)(n.li,{children:"Dropdown Menu"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["GreatFrontEnd has a ",(0,r.jsx)(n.a,{href:"/questions/formats/ui-coding",children:"comprehensive list of user interface coding questions"})," that you can practice in your framework of choice (currently supports Vanilla JavaScript and ",(0,r.jsx)(n.a,{href:"https://react.dev/",children:"React"}),"). We also provide manual test cases you can test your code against to verify the correctness and solutions written in the various JavaScript UI frameworks by ex-FAANG Senior Engineers. Automated test cases are not provided for UI questions because they tend to be coupled to implementation and hard for automated tests to test accurately. Moreover, during interviews you likely have to test your UI yourself."]}),"\n",(0,r.jsx)(n.p,{children:"Many of GreatFrontEnd's coding questions are also broken down into stages, which get progressively harder. In interviews, your interviewer might only explicitly request for the basic functionality. However, after you complete the basic functionality, you can take the initiative to add on more features to improve on the basic version and handle more edge cases. An example of a question broken down into stages:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/questions/user-interface/accordion",children:"Accordion"}),": Build a basic accordion that focuses on rendering and show/hide functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/questions/user-interface/accordion-ii",children:"Accordion II"}),": Build an accordion with improved accessibility that has the right ARIA roles, states, and properties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/questions/user-interface/accordion-iii",children:"Accordion III"}),": Built a fully-accessible accordion that has keyboard support according to ARIA specifications"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Building the basic accordion component might let you pass the interview, but nailing the accessibility aspects will help you score more points and possibly put you at senior level."}),"\n",(0,r.jsx)(n.p,{children:"Note that we are intentionally vague in some of the questions and don't present the full requirements upfront in the question description. However, we'll cover as much ground as possible in the solution. It may be frustrating while reading the solutions to see that you've missed out some things, but this trains you to think ahead and consider what are the possible areas you have to take note of when working on the solution. Better to find out during practice than during actual interviews."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);