"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[339],{7959:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"frontend-interview/ui-interview-cheatsheet","title":"Cheatsheet for UI Interview Questions","description":"A cheatsheet you can use to improve the user interfaces you have to build or design during front end interviews.","source":"@site/docs/frontend-interview/06-ui-interview-cheatsheet.md","sourceDirName":"frontend-interview","slug":"/frontend-interview/ui-interview-cheatsheet","permalink":"/frontend-system-design/docs/frontend-interview/ui-interview-cheatsheet","draft":false,"unlisted":false,"editUrl":"https://github.com/binhphanhai/frontend-system-design/tree/main/Summarize/docs/frontend-interview/06-ui-interview-cheatsheet.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"frontendInterviewSidebar","previous":{"title":"User Interface Coding Interviews","permalink":"/frontend-system-design/docs/frontend-interview/user-interface-coding-interviews"},"next":{"title":"API Design Principles for UI Components","permalink":"/frontend-system-design/docs/frontend-interview/ui-component-api-design"}}');var i=s(4848),r=s(8453);const o={},a="Cheatsheet for UI Interview Questions",l={},d=[{value:"General",id:"general",level:2},{value:"Component Organization",id:"component-organization",level:2},{value:"State Design",id:"state-design",level:2},{value:"JavaScript",id:"javascript",level:2},{value:"HTML",id:"html",level:2},{value:"Forms",id:"forms",level:3},{value:"CSS/Styling",id:"cssstyling",level:2},{value:"User Experience",id:"user-experience",level:2},{value:"Network",id:"network",level:2},{value:"Accessibility (a11y)",id:"accessibility-a11y",level:2},{value:"Edge Cases",id:"edge-cases",level:2},{value:"Performance",id:"performance",level:2},{value:"Security",id:"security",level:2},{value:"Internationalization (i18n)",id:"internationalization-i18n",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"cheatsheet-for-ui-interview-questions",children:"Cheatsheet for UI Interview Questions"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"A cheatsheet you can use to improve the user interfaces you have to build or design during front end interviews."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Here are some tips you can use to improve the user interfaces you have to build/design during front end interviews. These can be applied to both ",(0,i.jsx)(n.a,{href:"/front-end-interview-playbook/user-interface",children:"User Interface Coding Interviews"})," and ",(0,i.jsx)(n.a,{href:"/system-design/types-of-questions",children:"Front End System Design Interviews"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Break down the problem"}),": Break down the problem into stages/milestones that build on top of each other and write your code progressively."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test frequently"}),": Test the UI in the browser after you complete every feature so that you can catch bugs early. Bugs caught earlier are easier to fix. Make sure the current feature is working before moving on to the next feature."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use JavaScript frameworks if possible"}),": Your life will be very hard if you choose to build complicated UI using Vanilla JavaScript as the code can get very long and messy quickly. We recommend building apps and games using a JavaScript framework/library (e.g. React, Vue, Angular, etc.) if possible."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Think ahead and plan accordingly"}),": Think about what features your interviewer might ask you to add next by drawing from your experience in building real-world applications, using libraries, or from practicing interview questions. Design your code in a way that makes it easy for new features to be added. Most of the time you would be asked to component-ize your UI so that multiple component instances can be shown on a page \u2013 modularize and avoid relying on global states or polluting the global namespace."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"component-organization",children:"Component Organization"}),"\n",(0,i.jsx)(n.p,{children:"How do you structure your code?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Adopt the ",(0,i.jsx)(n.a,{href:"https://www.patterns.dev/posts/presentational-container-pattern/",children:"Container/Presentational Pattern"})]}),": To achieve good decoupling, rendering code should be agnostic to the source of data. Separate components into an outer layer that provides the data and an inner stateless one that renders the view based on the data. This makes it easy for the view to switch from local component/app state to data loaded from the network and vice versa, you only have to change the outer component and the inner component can be used as-is. This separation also facilitates testing of the presentational component as the required data can be easily mocked."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Break down the app into smaller components"}),": If the UI has multiple parts, break the UI into smaller components and identify the props/state needed by each component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Minimal API surface area"}),": Don't pass excess data to inner components which don't need them."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component instantiation"}),": When asked to build UI components, define APIs (usually functions) to allow creating multiple independent instances of the components along with configurable options and defaults. Avoid writing code (e.g. relying on global variables) that prevents multiple UI component instances from being created.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vanilla JavaScript"}),": Create a function that takes in a DOM element (the container element) and an options object. Within the function you can dynamically create DOM elements and append to the container element. Another source of inspiration for a component API is ",(0,i.jsx)(n.a,{href:"https://jqueryui.com/",children:"jQuery UI"}),", but that has a dependency on jQuery."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Other JavaScript UI frameworks"}),": Most modern JavaScript UI frameworks (e.g. React, Vue, Angular) force you to think in terms of components by default."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"state-design",children:"State Design"}),"\n",(0,i.jsx)(n.p,{children:"State is data that changes over time in your UI, commonly due to user interactions or background events (network request response, passing of time, WebSocket events)."}),"\n",(0,i.jsx)(n.p,{children:"Most UI questions in interviews will require state and designing the state well is paramount."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Determine the minimum state needed in your UI"}),": The smaller the state, the easier it is to read and understand the code \u2192 lower likelihood for bugs. Identify essential state vs derived state. Derived state is state that can be calculated from essential state. By deriving the state on-the-fly you reduce the possibility of state values going out-of-sync."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Separate rendering code vs data management code"}),": Make the UI a function of your data and separate your code into two parts (rendering code vs data management code) for better readability. If you use JavaScript frameworks such as React, you will more or less be forced to do so."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use the state-reducer pattern for complex state interactions"}),": If the question requires many state fields and certain actions require changing multiple fields at once, use a ",(0,i.jsx)(n.a,{href:"https://react.dev/learn/extracting-state-logic-into-a-reducer",children:"reducer to consolidate state update logic"}),". First popularized by Redux, the state-reducer pattern encourages you to determine the state of your UI, actions that can be taken, and how to combine actions with state to derive the next state. If you are using React, you can achieve this pattern via the ",(0,i.jsxs)(n.a,{href:"https://react.dev/reference/react/useReducer",children:[(0,i.jsx)(n.code,{children:"useReducer"})," React hook"]}),". Redux is usually overkill for interviews and ",(0,i.jsx)(n.code,{children:"useReducer"})," should be sufficient."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://react.dev/",children:"React's"})," docs on ",(0,i.jsx)(n.a,{href:"https://react.dev/learn/managing-state",children:'"Managing State"'})," is an excellent resource on how to design and use component state correctly. Some of the ideas mentioned aren't specific to React and can be applied to any UI frameworks."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"javascript",children:"JavaScript"}),"\n",(0,i.jsx)(n.p,{children:"Is your JavaScript using modern language syntax and good practices while avoiding bad practices?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use a style guide"}),": Use a JavaScript style guide like ",(0,i.jsx)(n.a,{href:"https://github.com/airbnb/javascript",children:"Airbnb's JavaScript Style Guide"}),". During development, static analysis tools like ",(0,i.jsx)(n.a,{href:"https://eslint.org/",children:"ESLint"})," can help you to enforce some of these good practices. However, these tools might not be available during interviews. Try to get accustomed to writing code with good coding style without help from a tool."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Leave the global environment alone"}),": This applies to Vanilla JavaScript scenarios. Avoid polluting global scope by declaring global variables and global functions. Write an Immediately-Invoked Function Expression (IIFE) and put all custom code within it."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"html",children:"HTML"}),"\n",(0,i.jsx)(n.p,{children:"Are you writing semantic HTML with the right tags and right attributes?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Semantic tags"}),": Use heading tags for titles, button tags for interactive elements, list tags for sequential elements, and so on. Don't use ",(0,i.jsx)(n.code,{children:"<div>"}),"s for everything!"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Heading hierarchy"}),": Ensure heading tags have a hierarchy and there's not more than one ",(0,i.jsx)(n.code,{children:"<h1>"})," in the DOM."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interactive elements"}),": Use ",(0,i.jsx)(n.code,{children:"<button>"})," for elements that require interaction. Do not add click handlers to ",(0,i.jsx)(n.code,{children:"<div>"})," and ",(0,i.jsx)(n.code,{children:"<span>"}),"s, that's a huge red flag and shows a lack of thought for accessibility."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"forms",children:"Forms"}),"\n",(0,i.jsx)(n.p,{children:"Forms are complex on its own and deserves its own section."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Link labels and inputs"}),": ",(0,i.jsx)(n.code,{children:"<input>"}),"s should be linked to ",(0,i.jsx)(n.code,{children:"<label>"}),"s using ",(0,i.jsx)(n.code,{children:"id"})," and ",(0,i.jsx)(n.code,{children:"for"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Wrap inputs in a form"}),": ",(0,i.jsx)(n.code,{children:"<input>"}),"s should be wrapped in a ",(0,i.jsx)(n.code,{children:"<form>"})," so that clicking on buttons and hitting Enter will submit the form. Remember to add ",(0,i.jsx)(n.code,{children:"event.preventDefault()"})," if the network request is meant to be made using Ajax."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inputs should have appropriate types"}),": ",(0,i.jsx)(n.code,{children:"<input>"}),"s should have appropriate ",(0,i.jsx)(n.code,{children:"type"})," like ",(0,i.jsx)(n.code,{children:"email"}),", ",(0,i.jsx)(n.code,{children:"password"}),", ",(0,i.jsx)(n.code,{children:"number"}),", etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Leverage native HTML form validation"}),": Where possible, use the ",(0,i.jsx)(n.code,{children:"required"})," attribute combined with other attributes like ",(0,i.jsx)(n.code,{children:"pattern"}),", ",(0,i.jsx)(n.code,{children:"min"}),", ",(0,i.jsx)(n.code,{children:"max"}),", and so on."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cssstyling",children:"CSS/Styling"}),"\n",(0,i.jsx)(n.p,{children:"Is your CSS written in a scalable and easy-to-understand manner?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write Vanilla CSS"}),": Learn to write CSS without reliance on preprocessors like ",(0,i.jsx)(n.a,{href:"https://sass-lang.com/",children:"Sass"})," and ",(0,i.jsx)(n.a,{href:"https://lesscss.org/",children:"Less"}),". Not all environments will allow using processors and interview questions are likely small and do not really benefit from the features CSS preprocessors bring. The most useful feature of CSS processors is the use of variables, which is available natively via CSS custom properties (variables)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Adopt a CSS naming convention"}),": Consider adopting a CSS naming methodology like ",(0,i.jsx)(n.a,{href:"https://getbem.com/",children:"Block Element Modifier"})," when writing your classes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Avoid ",(0,i.jsx)(n.code,{children:"#id"})," selectors in components"]}),": When building UI components meant to be reused (e.g. buttons, tabs, menus, modals, etc), avoid using ",(0,i.jsx)(n.code,{children:"#id"})," selectors in the HTML as ",(0,i.jsx)(n.code,{children:"id"}),"s are meant to be globally unique but you can have multiple instances of the component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Organize your CSS"}),": Read about how to ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Organizing",children:"organize your CSS in big projects"})," and how to have a ",(0,i.jsx)(n.a,{href:"http://smacss.com/",children:"Scalable and Modular Architecture for CSS"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"user-experience",children:"User Experience"}),"\n",(0,i.jsx)(n.p,{children:"Does your UI provide a great user experience?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mobile-friendliness"}),": Check if you need to make your UI work well on mobile.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CSS media queries can be used to render a different layout on mobile."}),"\n",(0,i.jsx)(n.li,{children:"Make interactive elements like buttons large enough to be pressed (recommend at least 44 x 44 px) and spaced widely enough."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error states"}),": Reflect errors promptly and clearly \u2014 form validation errors, network request errors."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handle rendering images of different dimensions"}),": Make your UI work for rendering images of all sizes/dimensions yet preserving the original aspect ratios.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use CSS ",(0,i.jsx)(n.code,{children:"background-image"})," together with ",(0,i.jsx)(n.code,{children:"background-size: contain"})," so that the image fits within your defined area. If it is ok for the image to be cropped off (e.g. for gradient backgrounds), use ",(0,i.jsx)(n.code,{children:"background-size: cover"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<img>"})," tags have a similar ",(0,i.jsx)(n.code,{children:"object-fit"})," property with ",(0,i.jsx)(n.code,{children:"contain"})," and ",(0,i.jsx)(n.code,{children:"cover"})," values."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimistic updates"}),": Advanced technique where the success state is reflected even though the network request is still pending. If the request fails, revert the UI changes and show an error message."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"network",children:"Network"}),"\n",(0,i.jsx)(n.p,{children:"Does your UI handle the unpredictable nature of network requests and conditions?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reflect network request states"}),": If the UI involves making network requests, clearly show the pending/success/failure state of the requests","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pending"}),": Disable fields/buttons, show a spinner."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error"}),": Show an error message."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Success"}),": Update the UI and/or show a success message."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Race conditions"}),": A common reason is due to parallel network requests where the response order is not guaranteed. A request made later could receive a response earlier. If your UI is susceptible to this, you can keep track of the latest requests and ignore the results from the earlier ones. Alternatively, make it such that your UI cannot fire multiple network requests at once, e.g. by disabling elements which trigger network requests after they're clicked."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prevent duplicate requests"}),": Buttons should be disabled after submission to avoid making duplicate network requests."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consolidating requests"}),": If the UI is making too many network requests, you can:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Debounce/throttle"}),": Rate limit the number of network requests fired."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batch requests"}),": Group requests together and make only one single request. This requires the server side to support such a format."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": If a request with the same parameters has been made recently, can you reuse the previous response and save on a network round trip?"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request timeouts"}),": You might want to artificially show that the request has failed (timed out) if the request doesn't receive a response after a stipulated duration."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimistic updates"}),": Advanced technique where the success state is reflected even though the network request is still pending. If the request fails, revert the UI changes and show an error message."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"accessibility-a11y",children:"Accessibility (a11y)"}),"\n",(0,i.jsx)(n.p,{children:"Handling accessibility in UI is a huge plus and in some cases a requirement for senior engineers."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Can you use the UI with the keyboard only?"}),"\n",(0,i.jsx)(n.li,{children:"Can you use your UI component with a screen reader?"}),"\n",(0,i.jsx)(n.li,{children:"Can your UI component work without color?"}),"\n",(0,i.jsx)(n.li,{children:"Can your UI component work without sound?"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Source: ",(0,i.jsx)(n.a,{href:"https://medium.com/@addyosmani/accessible-ui-components-for-the-web-39e727101a67",children:"Accessible UI Components for the web"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Screen readers, ARIA roles, states, and properties"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add the right ",(0,i.jsx)(n.code,{children:"aria-role"}),"s for custom built elements not built using custom HTML tags."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"aria-label"}),"s to describe elements where text is not shown (e.g. icon-only buttons)."]}),"\n",(0,i.jsxs)(n.li,{children:["Link error messages elements with the elements responsible for them via ",(0,i.jsx)(n.code,{children:"aria-describedby"}),"/",(0,i.jsx)(n.code,{children:"aria-errormessage"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Image ",(0,i.jsx)(n.code,{children:"alt"})," text"]}),": Add ",(0,i.jsx)(n.code,{children:"alt"})," attribute to ",(0,i.jsx)(n.code,{children:"<img>"})," elements so that screen readers can describe the image."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Keyboard interactions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add the ",(0,i.jsx)(n.code,{children:"tabindex"})," attribute to elements you want to be focusable via keyboard tabbing."]}),"\n",(0,i.jsx)(n.li,{children:"Elements can be triggered via keyboard."}),"\n",(0,i.jsx)(n.li,{children:"Check that the focus order makes sense."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Visual issues"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Color contrast"}),": Sufficient color contrast between text/images and the background."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Size of elements"}),": font size, interactive element size should be large enough for their intended medium."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://web.dev/learn/accessibility/",children:"web.dev by Google has a free in-depth course on accessibility"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"edge-cases",children:"Edge Cases"}),"\n",(0,i.jsx)(n.p,{children:"There's probably not enough time to handle all edge cases scenarios in your code during the interview, but it'd be good to mention them to the interviewer for brownie points."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handle long strings"}),": Strings in UI (e.g. headings/button labels) can cause the UI to behave weirdly such as overflowing and affect the position of surrounding elements. Long strings can be a result of user input or translations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Empty states"}),": Show an empty state message/placeholder to indicate absence of contents e.g. when the list is empty. Showing nothing might make the user think that there's a pending network request and that data is still being fetched."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Too many items in a list"}),": Showing too many items on a single page can lead to poor UX (user has to scroll a lot) and poor performance in terms of responsiveness and memory consumption.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pagination"}),": Break up a long list of items into multiple pages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.patterns.dev/posts/virtual-lists",children:"Virtual lists"}),": Rendering only visible rows of content in a dynamic list instead of the entire list."]}),"\n",(0,i.jsxs)(n.li,{children:["Truncate the excess content and show an ellipsis. The ",(0,i.jsx)(n.code,{children:"word-break"})," CSS property will come in handy."]}),"\n",(0,i.jsx)(n.li,{children:'Limit the content to the first X characters/words and hide the excess content behind a "Show More" button.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"performance",children:"Performance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Throttle/debounce"}),": Throttle and debounce are rate limiting techniques to prevent unnecessary operations. This technique can be used for operations which aren't super time-sensitive like network requests and scroll/resizing event callbacks."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": The results of duplicate computations / network requests can be cached in browser memory/storage and not repeated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"On demand loading"}),": Lazy load data/component code only when they are needed, instead of loading all at the start."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prefetch/preload data"}),": Reduce network latency by prefetching/preloading data right before it is needed so that updates appear instantly."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Too many items in a list"}),': Refer to the point under "Edge Cases" above.']}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"security",children:"Security"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-site Scripting (XSS)"}),": Avoid assigning to ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML",children:(0,i.jsx)(n.code,{children:"Element.innerHTML"})})," or React's ",(0,i.jsx)(n.code,{children:"dangerouslySetInnerHTML"})," when rendering contents into the DOM if it comes from users to prevent cross-site scripting, assign to ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent",children:(0,i.jsx)(n.code,{children:"Node.textContent"})})," or use the experimental",(0,i.jsx)(n.a,{href:"https://webdocs.dev/en-us/docs/web/api/element/sethtml",children:(0,i.jsx)(n.code,{children:"Element.setHTML()"})})," method instead. Refer to ",(0,i.jsx)(n.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html",children:"OWASP's XSS Prevention Cheat Sheet"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:'Output encoding for "URL Contexts"'}),": If user-supplied input can be used in URL query parameters, use ",(0,i.jsx)(n.code,{children:"encodeURIComponent"})," to prevent unintended values from becoming part of the URL (e.g. extra query parameters)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross Site Request Forgery"}),": Refer to ",(0,i.jsx)(n.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html",children:"OWASP's CSRF Prevention Cheat Sheet"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"internationalization-i18n",children:"Internationalization (i18n)"}),"\n",(0,i.jsx)(n.p,{children:"Does your UI work for multiple languages? How easy is it to add support for more languages?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Avoid hardcoding of labels in a certain language"}),": Some UI components have label strings within them (e.g. image carousel has labels for prev/next buttons). It'd be good to allow customization of these label strings by making them part of component props/options."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"UI can render long strings"}),": Refer to the section above on rendering long strings."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Right-to-left languages"}),": Some languages (e.g. Arabic, Hebrew) are read from right-to-left and the UI has to be flipped horizontally. Use ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties",children:"CSS logical properties"})," to make your layout work for different ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Writing_Modes",children:"writing modes"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);