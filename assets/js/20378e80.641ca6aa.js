"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6030],{1418:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"javascript-practical/react-exercises","title":"React Exercises","description":"Explore these project ideas to apply your JavaScript knowledge in real-world scenarios.","source":"@site/docs/javascript-practical/04-react-exercises.md","sourceDirName":"javascript-practical","slug":"/javascript-practical/react-exercises","permalink":"/frontend-system-design/docs/javascript-practical/react-exercises","draft":false,"unlisted":false,"editUrl":"https://github.com/binhphanhai/frontend-system-design/tree/main/Summarize/docs/javascript-practical/04-react-exercises.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"javascriptPracticalSidebar","previous":{"title":"Quiz Exercises","permalink":"/frontend-system-design/docs/javascript-practical/quiz-exercises"}}');var i=r(4848),t=r(8453);const l={},a="React Exercises",c={},o=[{value:"Cheatsheet: React Todo List Solution",id:"cheatsheet-react-todo-list-solution",level:2},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Test Cases",id:"test-cases",level:3},{value:"Full React Code",id:"full-react-code",level:3},{value:"Accessibility &amp; UX Notes",id:"accessibility--ux-notes",level:3},{value:"Further Reading",id:"further-reading",level:3},{value:"Cheatsheet: React Contact Form Solution",id:"cheatsheet-react-contact-form-solution",level:2},{value:"Key Concepts",id:"key-concepts-1",level:3},{value:"Test Cases",id:"test-cases-1",level:3},{value:"Full React Code",id:"full-react-code-1",level:3},{value:"Accessibility &amp; UX Notes",id:"accessibility--ux-notes-1",level:3},{value:"Follow Up",id:"follow-up",level:3},{value:"Further Reading",id:"further-reading-1",level:3},{value:"Cheatsheet: React Tabs Solution",id:"cheatsheet-react-tabs-solution",level:2},{value:"Key Concepts",id:"key-concepts-2",level:3},{value:"Test Cases",id:"test-cases-2",level:3},{value:"Accessibility Notes",id:"accessibility-notes",level:3},{value:"Full React Code",id:"full-react-code-2",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources",level:3},{value:"Cheatsheet: React Job Board Solution",id:"cheatsheet-react-job-board-solution",level:2},{value:"High-Level Approach",id:"high-level-approach",level:3},{value:"State Variables",id:"state-variables",level:3},{value:"Data Fetching",id:"data-fetching",level:3},{value:"Rendering",id:"rendering",level:3},{value:"Test Cases",id:"test-cases-3",level:3},{value:"Notes",id:"notes",level:3},{value:"Full React Code",id:"full-react-code-3",level:3},{value:"Further Reading",id:"further-reading-2",level:3},{value:"Cheatsheet: React Accordion Solution",id:"cheatsheet-react-accordion-solution",level:2},{value:"Key Concepts",id:"key-concepts-3",level:3},{value:"Test Cases",id:"test-cases-4",level:3},{value:"Accessibility Notes",id:"accessibility-notes-1",level:3},{value:"Full React Code",id:"full-react-code-4",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-1",level:3},{value:"Cheatsheet: React Star Rating Solution",id:"cheatsheet-react-star-rating-solution",level:2},{value:"Key Concepts",id:"key-concepts-4",level:3},{value:"Test Cases",id:"test-cases-5",level:3},{value:"Improvement Notes",id:"improvement-notes",level:3},{value:"Full React Code",id:"full-react-code-5",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-2",level:3},{value:"Cheatsheet: React Image Carousel Solution",id:"cheatsheet-react-image-carousel-solution",level:2},{value:"Key Concepts",id:"key-concepts-5",level:3},{value:"Test Cases",id:"test-cases-6",level:3},{value:"Accessibility Notes",id:"accessibility-notes-2",level:3},{value:"Full React Code",id:"full-react-code-6",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-3",level:3},{value:"Cheatsheet: React Progress Bars Solution",id:"cheatsheet-react-progress-bars-solution",level:2},{value:"Key Concepts",id:"key-concepts-6",level:3},{value:"Test Cases",id:"test-cases-7",level:3},{value:"Full React Code",id:"full-react-code-7",level:3},{value:"CSS for Progress Bars",id:"css-for-progress-bars",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-4",level:3},{value:"Cheatsheet: React Like Button Solution",id:"cheatsheet-react-like-button-solution",level:2},{value:"Key Concepts",id:"key-concepts-7",level:3},{value:"Test Cases",id:"test-cases-8",level:3},{value:"Notes",id:"notes-1",level:3},{value:"Full React Code",id:"full-react-code-8",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-5",level:3},{value:"Cheatsheet: React Traffic Light Solution",id:"cheatsheet-react-traffic-light-solution",level:2},{value:"Key Concepts",id:"key-concepts-8",level:3},{value:"Test Cases",id:"test-cases-9",level:3},{value:"Full React Code",id:"full-react-code-9",level:3},{value:"Accessibility Notes",id:"accessibility-notes-3",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-6",level:3},{value:"Cheatsheet: React Digital Clock Solution",id:"cheatsheet-react-digital-clock-solution",level:2},{value:"Key Concepts",id:"key-concepts-9",level:3},{value:"Test Cases",id:"test-cases-10",level:3},{value:"Full React Code",id:"full-react-code-10",level:3},{value:"CSS for Digital Clock",id:"css-for-digital-clock",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-7",level:3},{value:"Cheatsheet: React Stop Watch Solution",id:"cheatsheet-react-stop-watch-solution",level:2},{value:"Key Concepts",id:"key-concepts-10",level:3},{value:"Test Cases",id:"test-cases-11",level:3},{value:"Accessibility &amp; User Experience",id:"accessibility--user-experience",level:3},{value:"Full React Code",id:"full-react-code-11",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-8",level:3},{value:"Cheatsheet: React File Explorer Solution",id:"cheatsheet-react-file-explorer-solution",level:2},{value:"Key Concepts",id:"key-concepts-11",level:3},{value:"Test Cases",id:"test-cases-12",level:3},{value:"Accessibility Notes",id:"accessibility-notes-4",level:3},{value:"Full React Code",id:"full-react-code-12",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-9",level:3},{value:"Cheatsheet: React Tic-tac-toe Solution",id:"cheatsheet-react-tic-tac-toe-solution",level:2},{value:"Key Concepts",id:"key-concepts-12",level:3},{value:"Test Cases",id:"test-cases-13",level:3},{value:"Accessibility Notes",id:"accessibility-notes-5",level:3},{value:"Full React Code",id:"full-react-code-13",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-10",level:3},{value:"Cheatsheet: React Transfer List Solution",id:"cheatsheet-react-transfer-list-solution",level:2},{value:"Key Concepts",id:"key-concepts-13",level:3},{value:"Test Cases",id:"test-cases-14",level:3},{value:"Full React Code",id:"full-react-code-14",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-11",level:3},{value:"Cheatsheet: React Nested Checkboxes Solution",id:"cheatsheet-react-nested-checkboxes-solution",level:2},{value:"Key Concepts",id:"key-concepts-14",level:3},{value:"Test Cases",id:"test-cases-15",level:3},{value:"Accessibility Notes",id:"accessibility-notes-6",level:3},{value:"Full React Code",id:"full-react-code-15",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-12",level:3},{value:"Cheatsheet: React Modal Dialog Solution",id:"cheatsheet-react-modal-dialog-solution",level:2},{value:"Key Concepts",id:"key-concepts-15",level:3},{value:"Test Cases",id:"test-cases-16",level:3},{value:"Full React Code",id:"full-react-code-16",level:3},{value:"Accessibility Notes",id:"accessibility-notes-7",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-13",level:3},{value:"Cheatsheet: React Data Table Solution",id:"cheatsheet-react-data-table-solution",level:2},{value:"Key Concepts",id:"key-concepts-16",level:3},{value:"Test Cases",id:"test-cases-17",level:3},{value:"Full React Code",id:"full-react-code-17",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-14",level:3},{value:"Cheatsheet: React Undoable Counter Solution",id:"cheatsheet-react-undoable-counter-solution",level:2},{value:"Key Concepts",id:"key-concepts-17",level:3},{value:"Test Cases",id:"test-cases-18",level:3},{value:"Full React Code",id:"full-react-code-18",level:3},{value:"Further Reading &amp; Resources",id:"further-reading--resources-15",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"react-exercises",children:"React Exercises"})}),"\n",(0,i.jsx)(n.p,{children:"Explore these project ideas to apply your JavaScript knowledge in real-world scenarios."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-todo-list-solution",children:"Cheatsheet: React Todo List Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Todo List with add and delete functionality, accessibility, and safe handling of user input."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tasks"}),": Array of task objects, each with a unique ",(0,i.jsx)(n.code,{children:"id"})," and ",(0,i.jsx)(n.code,{children:"label"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"newTask"}),": String for the current input value."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unique IDs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use a module-level ",(0,i.jsx)(n.code,{children:"id"})," counter to ensure each task has a unique key (important for React list rendering)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Controlled Input:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The input field is controlled by React state (",(0,i.jsx)(n.code,{children:"newTask"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Input uses ",(0,i.jsx)(n.code,{children:"aria-label"})," for screen readers."]}),"\n",(0,i.jsxs)(n.li,{children:["(Bonus) Consider ",(0,i.jsx)(n.code,{children:"aria-live"})," for announcing new tasks."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"React escapes user input by default, preventing XSS."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add a new task."}),"\n",(0,i.jsx)(n.li,{children:"Add multiple tasks."}),"\n",(0,i.jsx)(n.li,{children:"Add tasks with HTML or script tags (should not execute, no XSS)."}),"\n",(0,i.jsx)(n.li,{children:"Input is cleared after adding a task."}),"\n",(0,i.jsx)(n.li,{children:"Delete an existing task."}),"\n",(0,i.jsx)(n.li,{children:"Delete multiple tasks."}),"\n",(0,i.jsx)(n.li,{children:"Delete newly-added tasks."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\r\n\r\nlet id = 0;\r\n\r\nconst INITIAL_TASKS = [\r\n  { id: id++, label: 'Walk the dog' },\r\n  { id: id++, label: 'Water the plants' },\r\n  { id: id++, label: 'Wash the dishes' },\r\n];\r\n\r\nexport default function App() {\r\n  const [tasks, setTasks] = useState(INITIAL_TASKS);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <div>\r\n        <input\r\n          aria-label=\"Add new task\"\r\n          type=\"text\"\r\n          placeholder=\"Add your task\"\r\n          value={newTask}\r\n          onChange={(event) => {\r\n            setNewTask(event.target.value);\r\n          }}\r\n        />\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              setTasks(\r\n                tasks.concat({\r\n                  id: id++,\r\n                  label: newTask.trim(),\r\n                })\r\n              );\r\n              setNewTask('');\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ul>\r\n        {tasks.map(({ id, label }) => (\r\n          <li key={id}>\r\n            <span>{label}</span>\r\n            <button\r\n              onClick={() => {\r\n                setTasks(tasks.filter((task) => task.id !== id));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility--ux-notes",children:"Accessibility & UX Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["All form inputs should be labeled (",(0,i.jsx)(n.code,{children:"aria-label"})," or ",(0,i.jsx)(n.code,{children:"<label>"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["For bonus accessibility, use an ",(0,i.jsx)(n.code,{children:"aria-live"})," region to announce new tasks to screen readers."]}),"\n",(0,i.jsx)(n.li,{children:"Input is cleared after adding a task for a smooth user experience."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading",children:"Further Reading"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/forms",children:"React Docs: Forms"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/rendering-lists",children:"React Docs: Lists and Keys"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions",children:"MDN: ARIA live regions"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/security",children:"React Security"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-contact-form-solution",children:"Cheatsheet: React Contact Form Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Contact Form using semantic HTML, proper labeling, and native form submission."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-1",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Semantic HTML:"})," Use ",(0,i.jsx)(n.code,{children:"<form>"}),", ",(0,i.jsx)(n.code,{children:"<label>"}),", ",(0,i.jsx)(n.code,{children:"<input>"}),", and ",(0,i.jsx)(n.code,{children:"<textarea>"})," for accessibility and browser compatibility."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Form Submission:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the ",(0,i.jsx)(n.code,{children:"action"})," attribute to specify the API endpoint."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:'method="post"'})," for POST requests."]}),"\n",(0,i.jsx)(n.li,{children:"No JavaScript is required for basic form submission; the browser handles it natively."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Field Naming:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"name"})," attribute on each field determines the key in the submitted form data."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:'<label htmlFor="...">'})," and matching ",(0,i.jsx)(n.code,{children:"id"})," on inputs for proper screen reader support."]}),"\n",(0,i.jsxs)(n.li,{children:["Avoid nesting ",(0,i.jsx)(n.code,{children:"<input>"})," inside ",(0,i.jsx)(n.code,{children:"<label>"})," for maximum compatibility."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-1",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["All fields (",(0,i.jsx)(n.code,{children:"name"}),", ",(0,i.jsx)(n.code,{children:"email"}),", ",(0,i.jsx)(n.code,{children:"message"}),") can be updated."]}),"\n",(0,i.jsx)(n.li,{children:"Clicking the submit button triggers form submission."}),"\n",(0,i.jsxs)(n.li,{children:["Pressing Enter in a field (except ",(0,i.jsx)(n.code,{children:"<textarea>"}),") submits the form if valid."]}),"\n",(0,i.jsx)(n.li,{children:"Success alert is shown if all fields are filled."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-1",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import submitForm from \'./submitForm\';\r\n\r\nexport default function App() {\r\n  return (\r\n    <form\r\n      // Ignore the onSubmit prop, it\'s used by GFE to\r\n      // intercept the form submit event to check your solution.\r\n      onSubmit={submitForm}\r\n      action="https://questions.greatfrontend.com/api/questions/contact-form"\r\n      method="post"\r\n    >\r\n      <div>\r\n        <label htmlFor="name-input">Name</label>\r\n        <input id="name-input" name="name" type="text" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor="email-input">Email</label>\r\n        <input id="email-input" name="email" type="email" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor="message-input">Message</label>\r\n        <textarea id="message-input" name="message"></textarea>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility--ux-notes-1",children:"Accessibility & UX Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Always link ",(0,i.jsx)(n.code,{children:"<label>"})," to ",(0,i.jsx)(n.code,{children:"<input>"}),"/",(0,i.jsx)(n.code,{children:"<textarea>"})," using ",(0,i.jsx)(n.code,{children:"htmlFor"})," and ",(0,i.jsx)(n.code,{children:"id"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Do not nest ",(0,i.jsx)(n.code,{children:"<input>"})," inside ",(0,i.jsx)(n.code,{children:"<label>"})," for best assistive tech support."]}),"\n",(0,i.jsx)(n.li,{children:"Use semantic elements for best browser and accessibility support."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"follow-up",children:"Follow Up"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Try implementing a signup form with AJAX submission and client-side validation for more advanced practice."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading-1",children:"Further Reading"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/Forms",children:"MDN: HTML forms"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label",children:"MDN: Labeling controls"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/forms",children:"React Docs: Forms"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-tabs-solution",children:"Cheatsheet: React Tabs Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Tabs component with state, API design, and basic styling."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-2",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Only one state value is needed: the currently active tab (",(0,i.jsx)(n.code,{children:"value"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Props (API Design):"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"items"}),": Array of tab objects, each with ",(0,i.jsx)(n.code,{children:"value"})," (unique id), ",(0,i.jsx)(n.code,{children:"label"})," (tab text), and ",(0,i.jsx)(n.code,{children:"panel"})," (tab content)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"defaultValue"}),": The value of the tab to show by default (falls back to the first item if not provided)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uncontrolled Component:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"State is managed internally by the Tabs component."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"UI:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Render a list of tab buttons and a panel for the active tab."}),"\n",(0,i.jsx)(n.li,{children:"Active tab is styled differently."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-2",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All provided items are displayed as tabs."}),"\n",(0,i.jsx)(n.li,{children:"The default active tab is shown on mount."}),"\n",(0,i.jsx)(n.li,{children:"Clicking a tab updates the active panel."}),"\n",(0,i.jsx)(n.li,{children:"Multiple Tabs components can be used independently."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This implementation is not fully accessible (no ARIA roles, keyboard navigation, or focus management)."}),"\n",(0,i.jsxs)(n.li,{children:["For production, follow ",(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/tabs/",children:"ARIA Tabs Pattern"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-2",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\r\n\r\nexport default function Tabs({ defaultValue, items }) {\r\n  const [value, setValue] = useState(\r\n    defaultValue ?? items[0].value,\r\n  );\r\n\r\n  return (\r\n    <div className=\"tabs\">\r\n      <div className=\"tabs-list\">\r\n        {items.map(({ label, value: itemValue }) => {\r\n          const isActiveValue = itemValue === value;\r\n\r\n          return (\r\n            <button\r\n              key={itemValue}\r\n              type=\"button\"\r\n              className={[\r\n                'tabs-list-item',\r\n                isActiveValue && 'tabs-list-item--active',\r\n              ]\r\n                .filter(Boolean)\r\n                .join(' ')}\r\n              onClick={() => {\r\n                setValue(itemValue);\r\n              }}\r\n            >\r\n              {label}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        {items.map(({ panel, value: itemValue }) => (\r\n          <div key={itemValue} hidden={itemValue !== value}>\r\n            {panel}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/tabs/",children:"ARIA Tabs Pattern (WAI-ARIA)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.radix-ui.com/primitives/docs/components/tabs",children:"Tabs \u2013 Radix Primitives"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react-spectrum.adobe.com/react-aria/Tabs.html",children:"Tabs \u2013 React Aria"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://headlessui.com/react/tabs",children:"Tabs \u2013 Headless UI"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://ariakit.org/components/tab",children:"Tab \u2013 Ariakit"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://reach.tech/tabs",children:"Tabs | Reach UI"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-job-board-solution",children:"Cheatsheet: React Job Board Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Job Board with paginated data fetching, state management, and robust UI."})}),"\n",(0,i.jsx)(n.h3,{id:"high-level-approach",children:"High-Level Approach"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Fetch the list of all job IDs from the API."}),"\n",(0,i.jsx)(n.li,{children:"Fetch job details for the current page of job IDs."}),"\n",(0,i.jsx)(n.li,{children:"Render jobs as cards in a grid layout."}),"\n",(0,i.jsx)(n.li,{children:'Fetch more jobs when the "Load more jobs" button is pressed.'}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"state-variables",children:"State Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fetchingJobDetails"}),": Boolean, tracks if job details are being fetched (disables the button, shows loading state)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"page"}),': Current page number (increments on "Load more").']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jobIds"}),": Array of all job IDs from the API (null until loaded)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jobs"}),": Array of job detail objects for the current board."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"isMounted"}),": Ref to prevent state updates after unmount (avoids React warnings)."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"data-fetching",children:"Data Fetching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"fetchJobIds(currPage)"})}),": Fetches all job IDs once, slices the array for the current page."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"fetchJobs(currPage)"})}),": Fetches job details for the current page's job IDs, appends to ",(0,i.jsx)(n.code,{children:"jobs"})," state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"useEffect"})}),": Triggers ",(0,i.jsx)(n.code,{children:"fetchJobs"})," when ",(0,i.jsx)(n.code,{children:"page"})," changes. Cleans up on unmount to avoid race conditions."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"rendering",children:"Rendering"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses CSS Grid for job cards."}),"\n",(0,i.jsx)(n.li,{children:'"Load more jobs" button is disabled while fetching.'}),"\n",(0,i.jsx)(n.li,{children:"Shows a loading message until job IDs are loaded."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-3",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Initial Loading:"}),' "Loading..." is shown until job IDs are fetched.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job Postings:"})," Job cards display title, poster, and timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job Links:"})," Clicking a job title opens the correct URL in a new tab (if present)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pagination:"}),' "Load more" fetches and displays more jobs.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Button State:"})," Button is disabled while fetching."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Keyboard Navigation:"})," All interactive elements are accessible by keyboard."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This solution does not handle API errors\u2014consider adding error handling for production."}),"\n",(0,i.jsx)(n.li,{children:"Handles race conditions and unmounting with a ref."}),"\n",(0,i.jsxs)(n.li,{children:["Uses ",(0,i.jsx)(n.code,{children:"Promise.all"})," for parallel job detail fetching."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-3",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { useEffect, useRef, useState } from \'react\';\r\nimport JobPosting from \'./JobPosting\';\r\n\r\nconst PAGE_SIZE = 6;\r\n\r\nexport default function App() {\r\n  const [fetchingJobDetails, setFetchingJobDetails] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [jobIds, setJobIds] = useState(null);\r\n  const [jobs, setJobs] = useState([]);\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchJobs(page);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page]);\r\n\r\n  async function fetchJobIds(currPage) {\r\n    let jobsList = jobIds;\r\n    if (!jobsList) {\r\n      const res = await fetch(\r\n        \'https://hacker-news.firebaseio.com/v0/jobstories.json\',\r\n      );\r\n      jobsList = await res.json();\r\n      if (!isMounted.current) return;\r\n      setJobIds(jobsList);\r\n    }\r\n    const start = currPage * PAGE_SIZE;\r\n    const end = start + PAGE_SIZE;\r\n    return jobsList.slice(start, end);\r\n  }\r\n\r\n  async function fetchJobs(currPage) {\r\n    const jobIdsForPage = await fetchJobIds(currPage);\r\n    setFetchingJobDetails(true);\r\n    const jobsForPage = await Promise.all(\r\n      jobIdsForPage.map((jobId) =>\r\n        fetch(\r\n          `https://hacker-news.firebaseio.com/v0/item/${jobId}.json`,\r\n        ).then((res) => res.json()),\r\n      ),\r\n    );\r\n    if (!isMounted.current) return;\r\n    setFetchingJobDetails(false);\r\n    const combinedJobs = [...jobs, ...jobsForPage];\r\n    setJobs(combinedJobs);\r\n  }\r\n\r\n  return (\r\n    <div className="app">\r\n      <h1 className="title">Hacker News Jobs Board</h1>\r\n      {jobIds == null ? (\r\n        <p className="loading">Loading...</p>\r\n      ) : (\r\n        <div>\r\n          <div className="jobs" role="list">\r\n            {jobs.map((job) => (\r\n              <JobPosting key={job.id} {...job} />\r\n            ))}\r\n          </div>\r\n          {jobs.length > 0 &&\r\n            page * PAGE_SIZE + PAGE_SIZE < jobIds.length && (\r\n              <button\r\n                className="load-more-button"\r\n                disabled={fetchingJobDetails}\r\n                onClick={() => setPage(page + 1)}\r\n              >\r\n                {fetchingJobDetails ? \'Loading...\' : \'Load more jobs\'}\r\n              </button>\r\n            )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading-2",children:"Further Reading"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/reference/react/useEffect",children:"React Docs: useEffect"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/state-a-components-memory",children:"React Docs: Managing State"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",children:"MDN: Fetch API"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-accordion-solution",children:"Cheatsheet: React Accordion Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement an Accordion component with expand/collapse functionality and independent state."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-3",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use a ",(0,i.jsx)(n.code,{children:"Set"})," to track which sections are expanded (multiple can be open at once)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Props (API Design):"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sections"}),": Array of section objects, each with:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"value"}),": Unique identifier for the section."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"title"}),": The text label for the section header."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"contents"}),": The content to show when expanded."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"UI:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Render a list of section headers as buttons."}),"\n",(0,i.jsx)(n.li,{children:"Clicking a header toggles its expanded/collapsed state."}),"\n",(0,i.jsx)(n.li,{children:"Each section can be expanded/collapsed independently."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-4",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All provided sections are displayed."}),"\n",(0,i.jsx)(n.li,{children:"Clicking a collapsed section expands it."}),"\n",(0,i.jsx)(n.li,{children:"Clicking an expanded section collapses it."}),"\n",(0,i.jsx)(n.li,{children:"All sections can be expanded/collapsed independently."}),"\n",(0,i.jsx)(n.li,{children:"Multiple Accordion components can be used independently."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes-1",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Section headers are rendered as ",(0,i.jsx)(n.code,{children:"<button>"})," for keyboard accessibility."]}),"\n",(0,i.jsx)(n.li,{children:"This implementation is not fully accessible (no ARIA roles, states, or keyboard navigation beyond button focus)."}),"\n",(0,i.jsxs)(n.li,{children:["For production, follow ",(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/accordion",children:"ARIA Accordion Pattern"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-4",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { useState } from \'react\';\r\n\r\nexport default function Accordion({ sections }) {\r\n  const [openSections, setOpenSections] = useState(new Set());\r\n\r\n  return (\r\n    <div className="accordion">\r\n      {sections.map(({ value, title, contents }) => {\r\n        const isExpanded = openSections.has(value);\r\n        return (\r\n          <div className="accordion-item" key={value}>\r\n            <button\r\n              className="accordion-item-title"\r\n              type="button"\r\n              onClick={() => {\r\n                const newOpenSections = new Set(openSections);\r\n                newOpenSections.has(value)\r\n                  ? newOpenSections.delete(value)\r\n                  : newOpenSections.add(value);\r\n                setOpenSections(newOpenSections);\r\n              }}\r\n            >\r\n              {title}\r\n              <span\r\n                aria-hidden={true}\r\n                className={[\r\n                  \'accordion-icon\',\r\n                  isExpanded && \'accordion-icon--rotated\',\r\n                ]\r\n                  .filter(Boolean)\r\n                  .join(\' \')}\r\n              />\r\n            </button>\r\n            <div\r\n              className="accordion-item-contents"\r\n              hidden={!isExpanded}\r\n            >\r\n              {contents}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-1",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/accordion",children:"ARIA Accordion Pattern (WAI-ARIA)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.radix-ui.com/primitives/docs/components/accordion",children:"Accordion \u2013 Radix Primitives"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://headlessui.com/react/accordion",children:"Accordion \u2013 Headless UI"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react-spectrum.adobe.com/react-aria/Accordion.html",children:"Accordion \u2013 React Aria"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-star-rating-solution",children:"Cheatsheet: React Star Rating Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Star Rating component with interactive highlighting and selection."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-4",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component Structure:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Star"}),": Renders a single SVG star, filled or outlined based on the ",(0,i.jsx)(n.code,{children:"filled"})," prop."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"StarRating"}),": Renders a row of stars, manages selection and hover state."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hoveredIndex"}),": Tracks which star is currently hovered (for highlight effect)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Highlight Logic:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If a star is hovered, all stars up to and including that index are highlighted."}),"\n",(0,i.jsx)(n.li,{children:"If not hovered, all stars up to the current value are highlighted."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Props:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"value"}),": Current rating value (number of filled stars)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"max"}),": Maximum number of stars."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onChange"}),": Callback when a star is clicked (sets new value)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-5",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Clicking a star sets the rating and highlights the correct number of stars."}),"\n",(0,i.jsx)(n.li,{children:"Hovering over a star highlights all stars up to that one; moving the cursor away restores the previous state."}),"\n",(0,i.jsx)(n.li,{children:"Multiple StarRating components can be rendered independently."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"improvement-notes",children:"Improvement Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["To allow form submission, embed a hidden ",(0,i.jsx)(n.code,{children:"<input>"})," with the value."]}),"\n",(0,i.jsx)(n.li,{children:"Add keyboard support for accessibility (e.g., arrow keys, Enter/Space to select)."}),"\n",(0,i.jsx)(n.li,{children:"Add RTL (right-to-left) support for internationalization."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-5",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { useState } from \'react\';\r\n\r\nfunction Star({ filled }) {\r\n  return (\r\n    <svg\r\n      xmlns="http://www.w3.org/2000/svg"\r\n      className={[\r\n        \'star-icon\',\r\n        filled ? \'star-icon-filled\' : \'\',\r\n      ].join(\' \')}\r\n      fill="none"\r\n      viewBox="0 0 24 24"\r\n      stroke="currentColor"\r\n      strokeWidth="2"\r\n    >\r\n      <path\r\n        strokeLinecap="round"\r\n        strokeLinejoin="round"\r\n        d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default function StarRating({ value, max, onChange }) {\r\n  const [hoveredIndex, setHoveredIndex] = useState(null);\r\n\r\n  return (\r\n    <div>\r\n      {Array.from({ length: max }).map((_, index) => (\r\n        <span\r\n          key={index}\r\n          tabIndex={0}\r\n          onMouseEnter={() => setHoveredIndex(index)}\r\n          onMouseLeave={() => setHoveredIndex(null)}\r\n          onClick={() => onChange(index + 1)}\r\n        >\r\n          <Star\r\n            filled={\r\n              hoveredIndex != null\r\n                ? index <= hoveredIndex\r\n                : index < value\r\n            }\r\n          />\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-2",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.freecodecamp.org/news/building-a-star-rating-component-with-react/",children:"Building a Star Rating Component in React (freeCodeCamp)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg",children:"MDN: SVG Element"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-image-carousel-solution",children:"Cheatsheet: React Image Carousel Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement an Image Carousel with navigation, cycling, and accessibility."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-5",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Carousel container with fixed height (400px) and max width (600px or 100vw)."}),"\n",(0,i.jsxs)(n.li,{children:["Image displayed with ",(0,i.jsx)(n.code,{children:"object-fit: contain"})," to preserve aspect ratio."]}),"\n",(0,i.jsx)(n.li,{children:"Prev/Next buttons are absolutely positioned and vertically centered."}),"\n",(0,i.jsx)(n.li,{children:"Page buttons are centered below the image for direct navigation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"currIndex"}),": The index of the currently displayed image."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Navigation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prev/Next buttons cycle through images (wrap around at ends)."}),"\n",(0,i.jsx)(n.li,{children:"Page buttons jump directly to a specific image."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Classnames:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Utility function ",(0,i.jsx)(n.code,{children:"clsx"})," for conditional class names."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-6",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Carousel displays the first image on load."}),"\n",(0,i.jsx)(n.li,{children:"Prev/Next buttons navigate images and cycle at ends."}),"\n",(0,i.jsx)(n.li,{children:"Page buttons jump to the correct image."}),"\n",(0,i.jsx)(n.li,{children:"All images are accessible through navigation."}),"\n",(0,i.jsx)(n.li,{children:"Carousel is centered, max size is 600x400px, images maintain aspect ratio."}),"\n",(0,i.jsx)(n.li,{children:"Empty space is filled with black."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes-2",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["All images have descriptive ",(0,i.jsx)(n.code,{children:"alt"})," text."]}),"\n",(0,i.jsxs)(n.li,{children:["All buttons have ",(0,i.jsx)(n.code,{children:"aria-label"})," for screen readers."]}),"\n",(0,i.jsxs)(n.li,{children:["(Bonus) For full accessibility, add an ",(0,i.jsx)(n.code,{children:"aria-live"})," region to announce image changes."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-6",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { useState } from \'react\';\r\n\r\nfunction clsx(...classnames) {\r\n  return classnames.filter(Boolean).join(\' \');\r\n}\r\n\r\nexport default function ImageCarousel({ images }) {\r\n  const [currIndex, setCurrIndex] = useState(0);\r\n  const currImage = images[currIndex];\r\n\r\n  return (\r\n    <div className="image-carousel">\r\n      <img\r\n        alt={currImage.alt}\r\n        src={currImage.src}\r\n        key={currImage.src}\r\n        className="image-carousel__image"\r\n      />\r\n      <button\r\n        aria-label="Previous image"\r\n        className="image-carousel__button image-carousel__button--prev"\r\n        onClick={() => {\r\n          const nextIndex = (currIndex - 1 + images.length) % images.length;\r\n          setCurrIndex(nextIndex);\r\n        }}\r\n      >\r\n        &#10094;\r\n      </button>\r\n      <div className="image-carousel__pages">\r\n        {images.map(({ alt, src }, index) => (\r\n          <button\r\n            className={clsx(\r\n              \'image-carousel__pages__button\',\r\n              index === currIndex && \'image-carousel__pages__button--active\',\r\n            )}\r\n            aria-label={`Navigate to ${alt}`}\r\n            key={src}\r\n            onClick={() => {\r\n              setCurrIndex(index);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button\r\n        aria-label="Next image"\r\n        className="image-carousel__button image-carousel__button--next"\r\n        onClick={() => {\r\n          const nextIndex = (currIndex + 1) % images.length;\r\n          setCurrIndex(nextIndex);\r\n        }}\r\n      >\r\n        &#10095;\r\n      </button>\r\n    </div>\r\n  );\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-3",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit",children:"MDN: object-fit"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.deque.com/blog/creating-accessible-carousels/",children:"Accessible Carousels (Deque)"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-progress-bars-solution",children:"Cheatsheet: React Progress Bars Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement animated progress bars that fill independently when added."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-6",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The number of bars is tracked in a single state variable (",(0,i.jsx)(n.code,{children:"bars"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Each ",(0,i.jsx)(n.code,{children:"ProgressBar"})," manages its own animation state (",(0,i.jsx)(n.code,{children:"startTransition"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Styling:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use CSS ",(0,i.jsx)(n.code,{children:"transform: scaleX()"})," for the fill animation (GPU-accelerated, smooth)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"transform-origin: left"})," ensures the bar fills from left to right."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Animation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each bar animates from empty to full using a CSS transition."}),"\n",(0,i.jsxs)(n.li,{children:["Animation is triggered after the bar is mounted (using ",(0,i.jsx)(n.code,{children:"useEffect"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-7",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Clicking "Add" appends a new progress bar that animates from empty to full.'}),"\n",(0,i.jsx)(n.li,{children:"Multiple bars can be added and animate independently."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-7",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useEffect, useState } from 'react';\r\n\r\nfunction ProgressBar() {\r\n  const [startTransition, setStartTransition] = useState(false);\r\n\r\n  // Start transition after first render and never apply this effect again.\r\n  useEffect(() => {\r\n    if (!startTransition) {\r\n      setStartTransition(true);\r\n    }\r\n  }, [startTransition]);\r\n\r\n  return (\r\n    <div className=\"bar\">\r\n      <div\r\n        className={[\r\n          'bar-contents',\r\n          startTransition && 'bar-contents--filled',\r\n        ]\r\n          .filter(Boolean)\r\n          .join(' ')}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [bars, setBars] = useState(0);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            setBars(bars + 1);\r\n          }}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      <div className=\"bars\">\r\n        {Array(bars)\r\n          .fill(null)\r\n          .map((_, index) => (\r\n            <ProgressBar key={index} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"css-for-progress-bars",children:"CSS for Progress Bars"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"body {\r\n  font-family: sans-serif;\r\n}\r\n\r\n.wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  justify-content: center;\r\n}\r\n\r\n.bars {\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 8px;\r\n}\r\n\r\n.bar {\r\n  background-color: #ccc;\r\n  height: 8px;\r\n}\r\n\r\n.bar-contents {\r\n  background-color: green;\r\n  height: 100%;\r\n  transform: scaleX(0);\r\n  transform-origin: left;\r\n  transition-duration: 2000ms;\r\n  transition-property: transform;\r\n  transition-timing-function: linear;\r\n}\r\n\r\n.bar-contents--filled {\r\n  transform: scaleX(1);\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-4",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform",children:"MDN: CSS Transforms"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transition",children:"MDN: CSS Transitions"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-like-button-solution",children:"Cheatsheet: React Like Button Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Like Button with loading, error, and toggling states, including API request handling."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-7",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"liked"}),": Boolean, tracks if the button is in the liked state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"isPending"}),": Boolean, tracks if an API request is in progress (disables the button, shows spinner)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"errorMessage"}),": String, error message from the API if the request fails."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Request Flow:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Set loading state and clear error."}),"\n",(0,i.jsxs)(n.li,{children:["Make a POST request to the API with the action (",(0,i.jsx)(n.code,{children:"like"})," or ",(0,i.jsx)(n.code,{children:"unlike"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"If successful, toggle the liked state."}),"\n",(0,i.jsx)(n.li,{children:"If failed, show the error message."}),"\n",(0,i.jsx)(n.li,{children:"Always clear the loading state at the end."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"UX:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Button is disabled while loading to prevent double clicks."}),"\n",(0,i.jsx)(n.li,{children:"Shows a spinner while loading."}),"\n",(0,i.jsx)(n.li,{children:"Shows an error message if the request fails."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-8",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hovering the button shows the hovered state (if styled)."}),"\n",(0,i.jsx)(n.li,{children:"Clicking toggles the liked state after a successful request."}),"\n",(0,i.jsx)(n.li,{children:"Shows a loading spinner while the request is pending."}),"\n",(0,i.jsx)(n.li,{children:"Shows an error message if the request fails."}),"\n",(0,i.jsx)(n.li,{children:"Button is disabled while loading to prevent multiple requests."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"notes-1",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Disabling the button during a request prevents double submissions and race conditions."}),"\n",(0,i.jsx)(n.li,{children:"For real-world use, consider debouncing rapid clicks and handling network errors more robustly."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-8",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\r\nimport { HeartIcon, SpinnerIcon } from './icons';\r\n\r\nfunction classNames(...args) {\r\n  return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport default function App() {\r\n  // Determines if the button is in the default/liked state.\r\n  const [liked, setLiked] = useState(false);\r\n  // Whether there's a pending background API request.\r\n  const [isPending, setIsPending] = useState(false);\r\n  // Error message to be shown if the API request failed.\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  async function likeUnlikeAction() {\r\n    try {\r\n      setIsPending(true);\r\n      setErrorMessage(null);\r\n\r\n      const response = await fetch(\r\n        'https://questions.greatfrontend.com/api/questions/like-button',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            action: liked ? 'unlike' : 'like',\r\n          }),\r\n        },\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        setErrorMessage(res.message);\r\n        return;\r\n      }\r\n\r\n      setLiked(!liked);\r\n    } finally {\r\n      setIsPending(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"button-container\">\r\n      <button\r\n        className={classNames(\r\n          'like-button',\r\n          liked ? 'like-button--liked' : 'like-button--default',\r\n        )}\r\n        disabled={isPending}\r\n        onClick={() => {\r\n          likeUnlikeAction();\r\n        }}\r\n      >\r\n        {isPending ? <SpinnerIcon /> : <HeartIcon />}\r\n        {liked ? 'Liked' : 'Like'}\r\n      </button>\r\n      {errorMessage && (\r\n        <div className=\"error-message\">{errorMessage}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-5",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/responding-to-events",children:"React Docs: Handling Events"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",children:"MDN: fetch API"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-traffic-light-solution",children:"Cheatsheet: React Traffic Light Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Traffic Light as a state machine with configurable states, durations, and layout."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-8",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State Machine:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each color/state has a duration and a next state."}),"\n",(0,i.jsx)(n.li,{children:"The current color is tracked in state and updated on a timer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configurable:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"config"})," object defines the states, their durations, next state, and color."]}),"\n",(0,i.jsx)(n.li,{children:"The component is reusable for any number of states/colors/layouts."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Layout:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Flexbox is used for vertical or horizontal arrangement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'aria-live="polite"'})," and ",(0,i.jsx)(n.code,{children:"aria-label"})," announce the current light to screen readers."]}),"\n",(0,i.jsxs)(n.li,{children:["The visual lights are hidden from screen readers with ",(0,i.jsx)(n.code,{children:'aria-hidden="true"'}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-9",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each light is shown for the specified duration."}),"\n",(0,i.jsx)(n.li,{children:"Lights transition to the next state correctly."}),"\n",(0,i.jsx)(n.li,{children:"Both vertical and horizontal layouts are supported."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-9",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useEffect, useState } from 'react';\r\n\r\nfunction Light({ backgroundColor }) {\r\n  return (\r\n    <div\r\n      aria-hidden={true}\r\n      className=\"traffic-light\"\r\n      style={{ backgroundColor }}\r\n    />\r\n  );\r\n}\r\n\r\nexport function TrafficLight({\r\n  initialColor = 'green',\r\n  config,\r\n  layout = 'vertical',\r\n}) {\r\n  const [currentColor, setCurrentColor] = useState(initialColor);\r\n\r\n  useEffect(() => {\r\n    const { duration, next } = config[currentColor];\r\n    const timerId = setTimeout(() => {\r\n      setCurrentColor(next);\r\n    }, duration);\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [currentColor, config]);\r\n\r\n  return (\r\n    <div\r\n      aria-live=\"polite\"\r\n      aria-label={`Current light: ${currentColor}`}\r\n      className={[\r\n        'traffic-light-container',\r\n        layout === 'vertical' && 'traffic-light-container--vertical',\r\n      ]\r\n        .filter(Boolean)\r\n        .join(' ')}\r\n    >\r\n      {Object.keys(config).map((color) => (\r\n        <Light\r\n          key={color}\r\n          backgroundColor={\r\n            color === currentColor ? config[color].backgroundColor : undefined\r\n          }\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Usage Example\r\nconst config = {\r\n  red: {\r\n    backgroundColor: 'red',\r\n    duration: 4000,\r\n    next: 'green',\r\n  },\r\n  yellow: {\r\n    backgroundColor: 'yellow',\r\n    duration: 500,\r\n    next: 'red',\r\n  },\r\n  green: {\r\n    backgroundColor: 'green',\r\n    duration: 3000,\r\n    next: 'yellow',\r\n  },\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <TrafficLight config={config} />\r\n      <TrafficLight config={config} layout=\"horizontal\" />\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes-3",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"aria-live"})," and ",(0,i.jsx)(n.code,{children:"aria-label"})," make the current light state available to screen readers."]}),"\n",(0,i.jsxs)(n.li,{children:["Visual lights are hidden from screen readers with ",(0,i.jsx)(n.code,{children:"aria-hidden"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-6",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/setTimeout",children:"MDN: setTimeout"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions",children:"ARIA: Live Regions"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/reference/react/useEffect",children:"React Docs: useEffect"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-digital-clock-solution",children:"Cheatsheet: React Digital Clock Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Digital Clock with a segment display, accurate update loop, and accessibility support."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-9",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Update Loop:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use a custom ",(0,i.jsx)(n.code,{children:"useCurrentDate"})," hook with ",(0,i.jsx)(n.code,{children:"setInterval"})," to update the clock every 100ms for smooth, accurate time."]}),"\n",(0,i.jsx)(n.li,{children:"Always clear the timer on unmount to avoid memory leaks."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"Digit"})," and ",(0,i.jsx)(n.code,{children:"Separator"})," components to render each digit and colon."]}),"\n",(0,i.jsxs)(n.li,{children:["Each ",(0,i.jsx)(n.code,{children:"Digit"})," is rendered using two squares and CSS borders to mimic a segment display."]}),"\n",(0,i.jsx)(n.li,{children:"Time is split into hours, minutes, and seconds, each rendered as two digits."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use a ",(0,i.jsx)(n.code,{children:"<time>"})," element with a ",(0,i.jsx)(n.code,{children:"datetime"})," attribute for screen readers."]}),"\n",(0,i.jsxs)(n.li,{children:["The visual digit/segment display is hidden from screen readers with ",(0,i.jsx)(n.code,{children:"aria-hidden"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-10",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Clock updates every second."}),"\n",(0,i.jsx)(n.li,{children:"Each digit is displayed correctly for at least 10 seconds."}),"\n",(0,i.jsx)(n.li,{children:"The time is accessible to screen readers."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-10",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useEffect, useState } from 'react';\r\n\r\nconst ALL_SIDES = [\r\n  'digit-square-border-top',\r\n  'digit-square-border-left',\r\n  'digit-square-border-right',\r\n  'digit-square-border-bottom',\r\n];\r\n\r\nconst NUMBER_TO_CLASSES = {\r\n  0: {\r\n    top: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-left',\r\n      'digit-square-border-right',\r\n    ],\r\n    bottom: [\r\n      'digit-square-border-bottom',\r\n      'digit-square-border-left',\r\n      'digit-square-border-right',\r\n    ],\r\n  },\r\n  1: {\r\n    top: ['digit-square-border-right'],\r\n    bottom: ['digit-square-border-right'],\r\n  },\r\n  2: {\r\n    top: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-right',\r\n      'digit-square-border-bottom',\r\n    ],\r\n    bottom: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-left',\r\n      'digit-square-border-bottom',\r\n    ],\r\n  },\r\n  3: {\r\n    top: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-right',\r\n      'digit-square-border-bottom',\r\n    ],\r\n    bottom: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-right',\r\n      'digit-square-border-bottom',\r\n    ],\r\n  },\r\n  4: {\r\n    top: [\r\n      'digit-square-border-left',\r\n      'digit-square-border-right',\r\n      'digit-square-border-bottom',\r\n    ],\r\n    bottom: [\r\n      'digit-square-border-right',\r\n      'digit-square-border-top',\r\n    ],\r\n  },\r\n  5: {\r\n    top: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-left',\r\n      'digit-square-border-bottom',\r\n    ],\r\n    bottom: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-right',\r\n      'digit-square-border-bottom',\r\n    ],\r\n  },\r\n  6: {\r\n    top: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-left',\r\n      'digit-square-border-bottom',\r\n    ],\r\n    bottom: ALL_SIDES,\r\n  },\r\n  7: {\r\n    top: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-right',\r\n    ],\r\n    bottom: ['digit-square-border-right'],\r\n  },\r\n  8: {\r\n    top: ALL_SIDES,\r\n    bottom: ALL_SIDES,\r\n  },\r\n  9: {\r\n    top: ALL_SIDES,\r\n    bottom: [\r\n      'digit-square-border-top',\r\n      'digit-square-border-right',\r\n      'digit-square-border-bottom',\r\n    ],\r\n  },\r\n};\r\n\r\nfunction Digit({ number }) {\r\n  const { top, bottom } = NUMBER_TO_CLASSES[number];\r\n  return (\r\n    <div>\r\n      <div\r\n        className={[\r\n          'digit-square',\r\n          'digit-square-top',\r\n          ...top,\r\n        ].join(' ')}\r\n        aria-hidden=\"true\"\r\n      />\r\n      <div\r\n        className={[\r\n          'digit-square',\r\n          'digit-square-bottom',\r\n          ...bottom,\r\n        ].join(' ')}\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Separator() {\r\n  return (\r\n    <div className=\"separator\" aria-hidden=\"true\">\r\n      <div className=\"separator-dot\" />\r\n      <div className=\"separator-dot\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useCurrentDate() {\r\n  const [date, setDate] = useState(new Date());\r\n  useEffect(() => {\r\n    const timer = window.setInterval(() => {\r\n      setDate(new Date());\r\n    }, 100);\r\n    return () => {\r\n      window.clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return date;\r\n}\r\n\r\nfunction padTwoDigit(number) {\r\n  return number >= 10 ? String(number) : `0${number}`;\r\n}\r\n\r\nexport default function App() {\r\n  const date = useCurrentDate();\r\n  let hours = date.getHours() % 12;\r\n  hours = hours === 0 ? 12 : hours;\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n  const dateTimeDisplay = `${padTwoDigit(date.getHours())}:${padTwoDigit(minutes)}:${padTwoDigit(seconds)}`;\r\n  return (\r\n    <time className=\"clock\" dateTime={dateTimeDisplay}>\r\n      <Digit number={parseInt(hours / 10, 10)} />\r\n      <Digit number={hours % 10} />\r\n      <Separator />\r\n      <Digit number={parseInt(minutes / 10, 10)} />\r\n      <Digit number={minutes % 10} />\r\n      <Separator />\r\n      <Digit number={parseInt(seconds / 10, 10)} />\r\n      <Digit number={seconds % 10} />\r\n    </time>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"css-for-digital-clock",children:"CSS for Digital Clock"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"body {\r\n  font-family: sans-serif;\r\n}\r\n\r\n.wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.clock {\r\n  --segment-width: 10px;\r\n  --segment-size: 40px;\r\n  --segment-color: #fff;\r\n\r\n  background-color: #000;\r\n  border: 10px solid #ccc;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  gap: 10px;\r\n  padding: 20px;\r\n}\r\n\r\n.digit-square {\r\n  border-style: solid;\r\n  border-color: transparent;\r\n  border-width: var(--segment-width);\r\n  box-sizing: border-box;\r\n  height: var(--segment-size);\r\n  width: var(--segment-size);\r\n}\r\n\r\n.digit-square-top {\r\n  border-bottom-width: calc(var(--segment-width) / 2);\r\n}\r\n\r\n.digit-square-bottom {\r\n  border-top-width: calc(var(--segment-width) / 2);\r\n}\r\n\r\n.digit-square-border-top {\r\n  border-top-color: var(--segment-color);\r\n}\r\n\r\n.digit-square-border-left {\r\n  border-left-color: var(--segment-color);\r\n}\r\n\r\n.digit-square-border-right {\r\n  border-right-color: var(--segment-color);\r\n}\r\n\r\n.digit-square-border-bottom {\r\n  border-bottom-color: var(--segment-color);\r\n}\r\n\r\n.separator {\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.separator-dot {\r\n  background-color: var(--segment-color);\r\n  border-radius: var(--segment-width);\r\n  height: var(--segment-width);\r\n  width: var(--segment-width);\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-7",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",children:"MDN: Date"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/setInterval",children:"MDN: setInterval"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time",children:["MDN: ",(0,i.jsx)(n.code,{children:"<time>"})," element"]})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-stop-watch-solution",children:"Cheatsheet: React Stop Watch Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Stop Watch with accurate timing, start/stop/reset, and accessible controls."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-10",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Timer Accuracy:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Do not rely on setInterval's delay for accuracy; always calculate elapsed time using Date.now() in the interval callback."}),"\n",(0,i.jsxs)(n.li,{children:["Use a ref (",(0,i.jsx)(n.code,{children:"lastTickTiming"}),") to store the last tick time for precise delta calculation."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"totalDuration"}),": Total elapsed time in ms."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"timerId"}),": The interval timer ID (null if not running)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"isRunning"}),": Derived from whether ",(0,i.jsx)(n.code,{children:"timerId"})," is set."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Functions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"startTimer()"}),": Starts the timer and updates ",(0,i.jsx)(n.code,{children:"totalDuration"})," based on real elapsed time."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stopInterval()"}),": Stops the timer."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resetTimer()"}),": Stops the timer and resets duration."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"toggleTimer()"}),": Toggles between start and stop."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Formatting:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time is formatted into hours, minutes, seconds, and hundredths of a second."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-11",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Clicking "Start" begins the timer and updates the display.'}),"\n",(0,i.jsx)(n.li,{children:'Clicking "Stop" pauses the timer.'}),"\n",(0,i.jsx)(n.li,{children:'Clicking "Start" again resumes from the paused time.'}),"\n",(0,i.jsx)(n.li,{children:'Clicking "Reset" stops and resets the timer to 0.'}),"\n",(0,i.jsx)(n.li,{children:"Clicking the time display toggles start/stop."}),"\n",(0,i.jsx)(n.li,{children:"All controls are accessible by keyboard (Tab, Enter, Space)."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility--user-experience",children:"Accessibility & User Experience"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The time display is rendered as a ",(0,i.jsx)(n.code,{children:"<button>"})," for full keyboard and screen reader accessibility."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user-select: none"})," can be added to prevent accidental text selection."]}),"\n",(0,i.jsx)(n.li,{children:"All interactive elements are focusable and usable with keyboard."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-11",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useRef, useState } from 'react';\r\n\r\nconst MS_IN_SECOND = 1000;\r\nconst SECONDS_IN_MINUTE = 60;\r\nconst MINUTES_IN_HOUR = 60;\r\nconst MS_IN_HOUR = MINUTES_IN_HOUR * SECONDS_IN_MINUTE * MS_IN_SECOND;\r\nconst MS_IN_MINUTE = SECONDS_IN_MINUTE * MS_IN_SECOND;\r\n\r\nfunction formatTime(timeParam) {\r\n  let time = timeParam;\r\n  const parts = {\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n    ms: 0,\r\n  };\r\n  if (time > MS_IN_HOUR) {\r\n    parts.hours = Math.floor(time / MS_IN_HOUR);\r\n    time %= MS_IN_HOUR;\r\n  }\r\n  if (time > MS_IN_MINUTE) {\r\n    parts.minutes = Math.floor(time / MS_IN_MINUTE);\r\n    time %= MS_IN_MINUTE;\r\n  }\r\n  if (time > MS_IN_SECOND) {\r\n    parts.seconds = Math.floor(time / MS_IN_SECOND);\r\n    time %= MS_IN_SECOND;\r\n  }\r\n  parts.ms = time;\r\n  return parts;\r\n}\r\n\r\nfunction padTwoDigit(number) {\r\n  return number >= 10 ? String(number) : `0${number}`;\r\n}\r\n\r\nexport default function Stopwatch() {\r\n  const lastTickTiming = useRef(null);\r\n  const [totalDuration, setTotalDuration] = useState(0);\r\n  const [timerId, setTimerId] = useState(null);\r\n  const isRunning = timerId != null;\r\n\r\n  function startTimer() {\r\n    lastTickTiming.current = Date.now();\r\n    setTimerId(\r\n      window.setInterval(() => {\r\n        const now = Date.now();\r\n        const timePassed = now - lastTickTiming.current;\r\n        setTotalDuration((duration) => duration + timePassed);\r\n        lastTickTiming.current = now;\r\n      }, 1),\r\n    );\r\n  }\r\n\r\n  function stopInterval() {\r\n    window.clearInterval(timerId);\r\n    setTimerId(null);\r\n  }\r\n\r\n  function resetTimer() {\r\n    stopInterval();\r\n    setTotalDuration(0);\r\n  }\r\n\r\n  function toggleTimer() {\r\n    if (isRunning) {\r\n      stopInterval();\r\n    } else {\r\n      startTimer();\r\n    }\r\n  }\r\n\r\n  const formattedTime = formatTime(totalDuration);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"time\"\r\n        onClick={toggleTimer}\r\n        style={{ userSelect: 'none' }}\r\n      >\r\n        {formattedTime.hours > 0 && (\r\n          <span>\r\n            <span className=\"time-number\">{formattedTime.hours}</span>\r\n            <span className=\"time-unit\">h</span>\r\n          </span>\r\n        )}{' '}\r\n        {formattedTime.minutes > 0 && (\r\n          <span>\r\n            <span className=\"time-number\">{formattedTime.minutes}</span>\r\n            <span className=\"time-unit\">m</span>\r\n          </span>\r\n        )}{' '}\r\n        <span>\r\n          <span className=\"time-number\">{formattedTime.seconds}</span>\r\n          <span className=\"time-unit\">s</span>\r\n        </span>{' '}\r\n        <span className=\"time-number time-number--small\">\r\n          {padTwoDigit(Math.floor(formattedTime.ms / 10))}\r\n        </span>\r\n      </button>\r\n      <div>\r\n        <button onClick={toggleTimer}>{isRunning ? 'Stop' : 'Start'}</button>{' '}\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-8",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/setInterval",children:"MDN: setInterval"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now",children:"MDN: Date.now()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/reference/react/useRef",children:"React Docs: useRef"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-file-explorer-solution",children:"Cheatsheet: React File Explorer Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a File Explorer with expandable/collapsible directories, sorting, and recursive rendering."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-11",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component Structure:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FileExplorer"}),": Top-level component, receives the file tree data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FileList"}),": Renders a list of files/directories, sorts directories before files, and sorts alphabetically."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FileObject"}),": Renders a single file or directory. If a directory, can be expanded/collapsed and recursively renders its children."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering Approach:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses a nested structure (recursive components) for intuitive indentation and easy removal of entire subtrees."}),"\n",(0,i.jsxs)(n.li,{children:["Each directory can be expanded/collapsed independently (state is local to each ",(0,i.jsx)(n.code,{children:"FileObject"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Indentation is managed by passing a ",(0,i.jsx)(n.code,{children:"level"})," prop."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sorting:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Directories are listed before files at each level."}),"\n",(0,i.jsx)(n.li,{children:"Both directories and files are sorted alphabetically."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-12",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"All file and directory names are displayed correctly."}),"\n",(0,i.jsx)(n.li,{children:"Directories appear before files and are sorted alphabetically."}),"\n",(0,i.jsx)(n.li,{children:"Files are sorted alphabetically."}),"\n",(0,i.jsx)(n.li,{children:"Clicking a directory toggles its expanded/collapsed state."}),"\n",(0,i.jsx)(n.li,{children:"Nested directories can be expanded/collapsed independently."}),"\n",(0,i.jsx)(n.li,{children:"Indentation reflects directory depth."}),"\n",(0,i.jsx)(n.li,{children:"Files are not expandable or interactive."}),"\n",(0,i.jsx)(n.li,{children:"Empty directories can be expanded/collapsed."}),"\n",(0,i.jsx)(n.li,{children:"Expanded/collapsed state persists for each directory instance."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes-4",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Directory and file names are rendered as ",(0,i.jsx)(n.code,{children:"<button>"}),"s for keyboard accessibility."]}),"\n",(0,i.jsxs)(n.li,{children:["For full accessibility (ARIA treeview roles, keyboard navigation), see ",(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/treeview",children:"ARIA Tree View Pattern"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-12",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"// App.js\r\nimport FileExplorer from './FileExplorer';\r\n\r\nexport default function App() {\r\n  const data = [\r\n    { id: 1, name: 'README.md' },\r\n    {\r\n      id: 2,\r\n      name: 'Documents',\r\n      children: [\r\n        { id: 3, name: 'Word.doc' },\r\n        { id: 4, name: 'Powerpoint.ppt' },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Downloads',\r\n      children: [\r\n        { id: 6, name: 'unnamed.txt' },\r\n        {\r\n          id: 7,\r\n          name: 'Misc',\r\n          children: [\r\n            { id: 8, name: 'foo.txt' },\r\n            { id: 9, name: 'bar.txt' },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  return <FileExplorer data={data} />;\r\n}\r\n\r\n// FileExplorer.js\r\nimport { useState } from 'react';\r\nimport FileList from './FileList';\r\n\r\nexport default function FileExplorer({ data }) {\r\n  return (\r\n    <div>\r\n      <FileList fileList={data} level={1} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FileObject({ file, level }) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const { children: fileChildren, name: fileName } = file;\r\n  const isDirectory = Boolean(fileChildren);\r\n\r\n  return (\r\n    <li className=\"file-item\" style={{ paddingLeft: `${level * 16}px` }}>\r\n      <button\r\n        className={[\r\n          'file-item-button',\r\n          isDirectory && 'file-item-button--directory',\r\n        ]\r\n          .filter(Boolean)\r\n          .join(' ')}\r\n        onClick={() => {\r\n          if (!isDirectory) return;\r\n          setExpanded(!expanded);\r\n        }}\r\n      >\r\n        <span>{fileName}</span>{' '}\r\n        {isDirectory && <>[{expanded ? '-' : '+'}]</>}\r\n      </button>\r\n      {fileChildren && fileChildren.length > 0 && expanded && (\r\n        <FileList fileList={fileChildren} level={level + 1} />\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\n// FileList.js\r\nimport { FileObject } from './FileExplorer';\r\n\r\nexport default function FileList({ fileList, level }) {\r\n  const directories = fileList.filter((fileItem) => fileItem.children);\r\n  directories.sort((a, b) => a.name.localeCompare(b.name));\r\n  const nonDirectories = fileList.filter((fileItem) => !fileItem.children);\r\n  nonDirectories.sort((a, b) => a.name.localeCompare(b.name));\r\n  const items = [...directories, ...nonDirectories];\r\n  return (\r\n    <ul className=\"file-list\">\r\n      {items.map((file) => (\r\n        <FileObject key={file.id} file={file} level={level} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-9",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/treeview",children:"ARIA Tree View Pattern"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/yangshun/top-javascript-interview-questions/tree/main/questions",children:"GitHub File Explorer Example"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.dev/yangshun/top-javascript-interview-questions/",children:"VS Code Tree View Virtualization"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-tic-tac-toe-solution",children:"Cheatsheet: React Tic-tac-toe Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a responsive, accessible Tic-tac-toe game with winner/draw logic and reset."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-12",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses CSS Grid for a responsive 3x3 board."}),"\n",(0,i.jsxs)(n.li,{children:["Each cell is a ",(0,i.jsx)(n.code,{children:"<button>"})," for accessibility and keyboard support."]}),"\n",(0,i.jsx)(n.li,{children:"Font size and aspect ratio are responsive for all screen sizes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"board"}),": Array of 9 values (",(0,i.jsx)(n.code,{children:"'X'"}),", ",(0,i.jsx)(n.code,{children:"'O'"}),", or ",(0,i.jsx)(n.code,{children:"null"}),") representing the board."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"xIsPlaying"}),": Boolean, true if it's X's turn, false for O."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Winner Logic:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"determineWinner(board)"}),": Checks all possible winning lines for three-in-a-row."]}),"\n",(0,i.jsxs)(n.li,{children:["Returns the winner (",(0,i.jsx)(n.code,{children:"'X'"})," or ",(0,i.jsx)(n.code,{children:"'O'"}),") or ",(0,i.jsx)(n.code,{children:"null"})," if no winner yet."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Draw Logic:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If all cells are filled and no winner, it's a draw."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reset:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Resets the board and turn to initial state. If the game is not over, asks for confirmation before resetting."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-13",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initial board is empty, X goes first."}),"\n",(0,i.jsx)(n.li,{children:"Clicking a cell marks it with the current player's symbol and switches turn."}),"\n",(0,i.jsx)(n.li,{children:"Winner is detected and announced; no further moves allowed after win."}),"\n",(0,i.jsx)(n.li,{children:"Draw is detected and announced if all cells are filled with no winner."}),"\n",(0,i.jsx)(n.li,{children:"Reset button clears the board and restarts the game."}),"\n",(0,i.jsx)(n.li,{children:"All controls and status messages are accessible to screen readers."}),"\n",(0,i.jsx)(n.li,{children:"Game is responsive and playable on all screen sizes."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes-5",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Each cell button has an ",(0,i.jsx)(n.code,{children:"aria-label"}),' describing the action (e.g., "Mark cell 4 as X").']}),"\n",(0,i.jsxs)(n.li,{children:["Status message uses ",(0,i.jsx)(n.code,{children:'aria-live="polite"'})," for screen readers."]}),"\n",(0,i.jsxs)(n.li,{children:["Cell mark is hidden from screen readers with ",(0,i.jsx)(n.code,{children:"aria-hidden"})," to avoid redundancy."]}),"\n",(0,i.jsx)(n.li,{children:"Fully keyboard accessible."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-13",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\r\n\r\n// List of cell indices that are 3-in-a-row.\r\nconst CELLS_IN_A_LINE = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [0, 4, 8],\r\n  [2, 4, 6],\r\n];\r\n\r\n// Determine if there's a winner for the board.\r\nfunction determineWinner(board) {\r\n  for (let i = 0; i < CELLS_IN_A_LINE.length; i++) {\r\n    const [x, y, z] = CELLS_IN_A_LINE[i];\r\n    if (\r\n      board[x] != null &&\r\n      board[x] === board[y] &&\r\n      board[y] === board[z]\r\n    ) {\r\n      return board[x];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction Cell({ index, disabled, mark, turn, onClick }) {\r\n  return (\r\n    <button\r\n      aria-label={\r\n        mark == null ? `Mark cell ${index} as ${turn}` : undefined\r\n      }\r\n      className=\"cell\"\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n    >\r\n      <span aria-hidden={true}>{mark}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [xIsPlaying, setIsXPlaying] = useState(true);\r\n  const winner = determineWinner(board);\r\n\r\n  function onReset() {\r\n    setBoard(Array(9).fill(null));\r\n    setIsXPlaying(true);\r\n  }\r\n\r\n  function getStatusMessage() {\r\n    if (winner != null) {\r\n      return `Player ${winner} wins!`;\r\n    }\r\n    if (!board.includes(null)) {\r\n      return `It's a draw!`;\r\n    }\r\n    return `Player ${xIsPlaying ? 'X' : 'O'} turn`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div aria-live=\"polite\">{getStatusMessage()}</div>\r\n      <div className=\"board\">\r\n        {Array(9)\r\n          .fill(null)\r\n          .map((_, index) => index)\r\n          .map((cellIndex) => {\r\n            const turn = xIsPlaying ? 'X' : 'O';\r\n            return (\r\n              <Cell\r\n                key={cellIndex}\r\n                disabled={board[cellIndex] != null || winner != null}\r\n                index={cellIndex}\r\n                mark={board[cellIndex]}\r\n                turn={turn}\r\n                onClick={() => {\r\n                  const newBoard = board.slice();\r\n                  newBoard[cellIndex] = turn;\r\n                  setBoard(newBoard);\r\n                  setIsXPlaying(!xIsPlaying);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          if (winner == null) {\r\n            const confirm = window.confirm(\r\n              'Are you sure you want to reset the game?',\r\n            );\r\n            if (!confirm) {\r\n              return;\r\n            }\r\n          }\r\n          onReset();\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-10",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/state-a-components-memory",children:"React Docs: State"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout",children:"MDN: CSS Grid Layout"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/example-index/tic-tac-toe/tic-tac-toe.html",children:"Accessible Tic-tac-toe Example (WAI-ARIA)"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-transfer-list-solution",children:"Cheatsheet: React Transfer List Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Transfer List with selectable items, transfer buttons, and accessibility support."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-13",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State/Data Structure:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use a ",(0,i.jsx)(n.code,{children:"Map"})," for each list (left/right) for O(1) access, insertion, and removal."]}),"\n",(0,i.jsx)(n.li,{children:"The key is the item label, the value is a boolean indicating if the item is selected."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transfer Logic:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"transferAllItems"}),": Moves all items from source to destination."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"transferSelectedItems"}),": Moves only selected items from source to destination."]}),"\n",(0,i.jsxs)(n.li,{children:["Helper: ",(0,i.jsx)(n.code,{children:"hasNoSelectedItems"})," checks if any items are selected in a list."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ItemList"})," renders a list of checkboxes for each item."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"CheckboxItem"})," uses ",(0,i.jsx)(n.code,{children:"useId"})," for unique, accessible labels."]}),"\n",(0,i.jsx)(n.li,{children:"Transfer buttons are disabled when not applicable."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Each checkbox is paired with a ",(0,i.jsx)(n.code,{children:"<label>"})," for click/focus support."]}),"\n",(0,i.jsxs)(n.li,{children:["Transfer buttons use ",(0,i.jsx)(n.code,{children:"aria-label"})," for screen readers and hide their visual content from screen readers with ",(0,i.jsx)(n.code,{children:"aria-hidden"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"All functionality is keyboard accessible."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-14",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Items can be checked/unchecked."}),"\n",(0,i.jsx)(n.li,{children:'"Transfer selected" buttons are disabled when no items are selected.'}),"\n",(0,i.jsx)(n.li,{children:'"Transfer all" buttons are disabled when the source list is empty.'}),"\n",(0,i.jsx)(n.li,{children:"Clicking transfer buttons moves items as expected."}),"\n",(0,i.jsx)(n.li,{children:"All controls are accessible by keyboard and screen reader."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-14",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useId, useState } from 'react';\r\n\r\nfunction CheckboxItem({ onChange, label, checked }) {\r\n  const id = useId();\r\n  return (\r\n    <div className=\"transfer-list__section__items__item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={id}\r\n        checked={checked === true || checked === false ? checked : false}\r\n        onChange={onChange}\r\n      />\r\n      <label htmlFor={id}>{label}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ItemList({ items, setItems }) {\r\n  return (\r\n    <ul>\r\n      {items.map((item, index) => (\r\n        <li key={item.id}>\r\n          <div>\r\n            <CheckboxItem\r\n              checked={item.checked}\r\n              label={item.name}\r\n              onChange={(event) => {\r\n                onCheck(event.target.checked, [index]);\r\n              }}\r\n            />\r\n          </div>\r\n          {item.children && item.children.length > 0 && (\r\n            <ItemList\r\n              items={item.children}\r\n              onCheck={(newValue, indices) => {\r\n                onCheck(newValue, [index, ...indices]);\r\n              }}\r\n            />\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst DEFAULT_ITEMS_LEFT = [\r\n  'HTML',\r\n  'JavaScript',\r\n  'CSS',\r\n  'TypeScript',\r\n];\r\nconst DEFAULT_ITEMS_RIGHT = [\r\n  'React',\r\n  'Angular',\r\n  'Vue',\r\n  'Svelte',\r\n];\r\n\r\nfunction generateItemsMap(items) {\r\n  return new Map(items.map((label) => [label, false]));\r\n}\r\n\r\nfunction hasNoSelectedItems(items) {\r\n  return Array.from(items.values()).filter(Boolean).length === 0;\r\n}\r\n\r\nfunction transferAllItems(itemsSrc, setItemsSrc, itemsDst, setItemsDst) {\r\n  setItemsDst(new Map([...itemsDst, ...itemsSrc]));\r\n  setItemsSrc(new Map());\r\n}\r\n\r\nfunction transferSelectedItems(itemsSrc, setItemsSrc, itemsDst, setItemsDst) {\r\n  const newItemsSrc = new Map(itemsSrc);\r\n  const newItemsDst = new Map(itemsDst);\r\n  itemsSrc.forEach((value, key) => {\r\n    if (!value) return;\r\n    newItemsDst.set(key, value);\r\n    newItemsSrc.delete(key);\r\n  });\r\n  setItemsSrc(newItemsSrc);\r\n  setItemsDst(newItemsDst);\r\n}\r\n\r\nexport default function App() {\r\n  const [itemsLeft, setItemsLeft] = useState(generateItemsMap(DEFAULT_ITEMS_LEFT));\r\n  const [itemsRight, setItemsRight] = useState(generateItemsMap(DEFAULT_ITEMS_RIGHT));\r\n\r\n  return (\r\n    <div className=\"transfer-list\">\r\n      <ItemList items={itemsLeft} setItems={setItemsLeft} />\r\n      <div className=\"transfer-list__actions\">\r\n        <button\r\n          aria-label=\"Transfer all items to left list\"\r\n          disabled={itemsRight.size === 0}\r\n          onClick={() => {\r\n            transferAllItems(itemsRight, setItemsRight, itemsLeft, setItemsLeft);\r\n          }}\r\n        >\r\n          <span aria-hidden={true}>&lt;&lt;</span>\r\n        </button>\r\n        <button\r\n          aria-label=\"Transfer selected items to left list\"\r\n          disabled={hasNoSelectedItems(itemsRight)}\r\n          onClick={() => {\r\n            transferSelectedItems(itemsRight, setItemsRight, itemsLeft, setItemsLeft);\r\n          }}\r\n        >\r\n          <span aria-hidden={true}>&lt;</span>\r\n        </button>\r\n        <button\r\n          aria-label=\"Transfer selected items to right list\"\r\n          disabled={hasNoSelectedItems(itemsLeft)}\r\n          onClick={() => {\r\n            transferSelectedItems(itemsLeft, setItemsLeft, itemsRight, setItemsRight);\r\n          }}\r\n        >\r\n          <span aria-hidden={true}>&gt;</span>\r\n        </button>\r\n        <button\r\n          aria-label=\"Transfer all items to right list\"\r\n          disabled={itemsLeft.size === 0}\r\n          onClick={() => {\r\n            transferAllItems(itemsLeft, setItemsLeft, itemsRight, setItemsRight);\r\n          }}\r\n        >\r\n          <span aria-hidden={true}>&gt;&gt;</span>\r\n        </button>\r\n      </div>\r\n      <ItemList items={itemsRight} setItems={setItemsRight} />\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-11",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"MDN: Map"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/reference/react/useId",children:"React Docs: useId"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://mui.com/material-ui/react-transfer-list/",children:"Accessible Transfer List Example (MUI)"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-nested-checkboxes-solution",children:"Cheatsheet: React Nested Checkboxes Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a tree of nested checkboxes with checked, unchecked, and indeterminate states, supporting arbitrary depth."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-14",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use recursive components (",(0,i.jsx)(n.code,{children:"CheckboxList"}),") to render nested checkboxes of any depth."]}),"\n",(0,i.jsx)(n.li,{children:"Each checkbox is rendered with a label and, if it has children, recursively renders its children."}),"\n",(0,i.jsxs)(n.li,{children:["Indentation is handled naturally by nested ",(0,i.jsx)(n.code,{children:"<ul>"}),"/",(0,i.jsx)(n.code,{children:"<li>"})," structure."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State Management:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The root component holds the full tree state as an array of objects."}),"\n",(0,i.jsx)(n.li,{children:"When a checkbox is toggled, update its state, all descendants, and all ancestors as needed."}),"\n",(0,i.jsx)(n.li,{children:"State is updated immutably by deep cloning the tree before mutation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indeterminate State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A checkbox is indeterminate if some (but not all) of its children are checked."}),"\n",(0,i.jsx)(n.li,{children:"Indeterminate state is set via the DOM property, not an attribute."}),"\n",(0,i.jsx)(n.li,{children:"Clicking an indeterminate checkbox checks it (and all descendants)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Event Handling:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each checkbox receives its position in the tree as an array of indices, so the root can update the correct node."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-15",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All checkboxes render correctly according to the data structure."}),"\n",(0,i.jsx)(n.li,{children:"Checking/unchecking a parent updates all descendants."}),"\n",(0,i.jsx)(n.li,{children:"Checking/unchecking a child updates ancestors to checked/unchecked/indeterminate as appropriate."}),"\n",(0,i.jsx)(n.li,{children:"Indeterminate state is visually distinct and propagates up the tree."}),"\n",(0,i.jsx)(n.li,{children:"All checkboxes are keyboard accessible and labeled."}),"\n",(0,i.jsx)(n.li,{children:"Edge cases (empty data, deep nesting) are handled gracefully."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes-6",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Each checkbox is paired with a ",(0,i.jsx)(n.code,{children:"<label>"})," for click/focus support."]}),"\n",(0,i.jsx)(n.li,{children:"Indeterminate state is visually distinct and keyboard accessible."}),"\n",(0,i.jsx)(n.li,{children:"All checkboxes are focusable and togglable by keyboard."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-15",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"// App.js\r\nimport Checkboxes from './Checkboxes';\r\n\r\nexport default function App() {\r\n  const checkboxesData = [\r\n    {\r\n      id: 1,\r\n      name: 'Electronics',\r\n      checked: false,\r\n      children: [\r\n        {\r\n          id: 2,\r\n          name: 'Mobile phones',\r\n          checked: false,\r\n          children: [\r\n            { id: 3, name: 'iPhone', checked: false },\r\n            { id: 4, name: 'Android', checked: false },\r\n          ],\r\n        },\r\n        {\r\n          id: 5,\r\n          name: 'Laptops',\r\n          checked: false,\r\n          children: [\r\n            { id: 6, name: 'MacBook', checked: false },\r\n            { id: 7, name: 'Surface Pro', checked: false },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Books',\r\n      checked: false,\r\n      children: [\r\n        { id: 9, name: 'Fiction', checked: false },\r\n        { id: 10, name: 'Non-fiction', checked: false },\r\n      ],\r\n    },\r\n    { id: 11, name: 'Toys', checked: false },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Checkboxes defaultCheckboxData={checkboxesData} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// CheckboxInput.js\r\nimport { InputHTMLAttributes, useEffect, useId, useRef } from 'react';\r\nexport type CheckboxValue = boolean | 'indeterminate';\r\nexport default function CheckboxInput({ checked, label, ...props }) {\r\n  const id = useId();\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.indeterminate = checked === 'indeterminate';\r\n    }\r\n  }, [checked]);\r\n  return (\r\n    <div className=\"checkbox\">\r\n      <input\r\n        id={id}\r\n        ref={ref}\r\n        type=\"checkbox\"\r\n        checked={checked === true || checked === false ? checked : false}\r\n        {...props}\r\n      />\r\n      <label htmlFor={id}>{label}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\n// CheckboxList.js\r\nimport CheckboxInput, { CheckboxValue } from './CheckboxInput';\r\nexport interface CheckboxItem {\r\n  id: number;\r\n  name: string;\r\n  checked: CheckboxValue;\r\n  children?: CheckboxItem[];\r\n}\r\nexport default function CheckboxList({ items, onCheck }) {\r\n  return (\r\n    <ul>\r\n      {items.map((item, index) => (\r\n        <li key={item.id}>\r\n          <div>\r\n            <CheckboxInput\r\n              checked={item.checked}\r\n              label={item.name}\r\n              onChange={(event) => {\r\n                onCheck(event.target.checked, [index]);\r\n              }}\r\n            />\r\n          </div>\r\n          {item.children && item.children.length > 0 && (\r\n            <CheckboxList\r\n              items={item.children}\r\n              onCheck={(newValue, indices) => {\r\n                onCheck(newValue, [index, ...indices]);\r\n              }}\r\n            />\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// Checkboxes.js\r\nimport { useState } from 'react';\r\nimport CheckboxList, { CheckboxItem } from './CheckboxList';\r\nfunction updateCheckboxAndDescendants(checkboxItem, checked) {\r\n  checkboxItem.checked = checked;\r\n  if (checkboxItem.children) {\r\n    checkboxItem.children.forEach((childItem) =>\r\n      updateCheckboxAndDescendants(childItem, checked),\r\n    );\r\n  }\r\n}\r\nfunction resolveCheckboxStates(checkboxItem, indices) {\r\n  if (indices.length > 0 && checkboxItem.children) {\r\n    resolveCheckboxStates(\r\n      checkboxItem.children[indices[0]],\r\n      indices.slice(1),\r\n    );\r\n  }\r\n  if (!checkboxItem.children) return;\r\n  const checkedChildren = checkboxItem.children.reduce(\r\n    (total, item) => total + Number(item.checked === true),\r\n    0,\r\n  );\r\n  const uncheckedChildren = checkboxItem.children.reduce(\r\n    (total, item) => total + Number(item.checked === false),\r\n    0,\r\n  );\r\n  if (checkedChildren === checkboxItem.children.length) {\r\n    checkboxItem.checked = true;\r\n  } else if (uncheckedChildren === checkboxItem.children.length) {\r\n    checkboxItem.checked = false;\r\n  } else {\r\n    checkboxItem.checked = 'indeterminate';\r\n  }\r\n}\r\nexport default function Checkboxes({ defaultCheckboxData }) {\r\n  const [checkboxData, setCheckboxData] = useState(defaultCheckboxData);\r\n  return (\r\n    <CheckboxList\r\n      items={checkboxData}\r\n      onCheck={(checked, indices) => {\r\n        const newCheckboxData = JSON.parse(JSON.stringify(checkboxData));\r\n        const nonFirstLevelIndices = indices.slice(1);\r\n        const modifiedCheckboxItem = nonFirstLevelIndices.reduce(\r\n          (modifiedItem, index) => modifiedItem.children[index],\r\n          newCheckboxData[indices[0]],\r\n        );\r\n        updateCheckboxAndDescendants(modifiedCheckboxItem, checked);\r\n        resolveCheckboxStates(newCheckboxData[indices[0]], nonFirstLevelIndices);\r\n        setCheckboxData(newCheckboxData);\r\n      }}\r\n    />\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-12",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes",children:"MDN: Indeterminate Checkbox"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/reference/react/useId",children:"React Docs: useId"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/treeview/",children:"Accessible Tree View Example (WAI-ARIA)"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-modal-dialog-solution",children:"Cheatsheet: React Modal Dialog Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a Modal Dialog as a controlled component, with overlay, portal rendering, and accessibility considerations."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-15",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Controlled Component:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The modal's open/closed state is controlled by a parent component via the ",(0,i.jsx)(n.code,{children:"open"})," prop."]}),"\n",(0,i.jsxs)(n.li,{children:["The parent manages state and passes an ",(0,i.jsx)(n.code,{children:"onClose"})," callback to the modal."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Props:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"title"}),": String shown at the top of the modal."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"children"}),": Modal content (can be any React node)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"open"}),": Boolean, controls visibility (default: false)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onClose"}),": Callback to close the modal."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering/Layout:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The modal is rendered using a React Portal to break out of the parent DOM hierarchy (avoids clipping/overflow issues)."}),"\n",(0,i.jsxs)(n.li,{children:["The overlay covers the entire viewport (",(0,i.jsx)(n.code,{children:"position: fixed; inset: 0; background: rgba(0,0,0,0.7);"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"The modal dialog is centered using flexbox."}),"\n",(0,i.jsxs)(n.li,{children:["The modal title is rendered as an ",(0,i.jsx)(n.code,{children:"<h1>"})," for semantic structure."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For full a11y, add ",(0,i.jsx)(n.code,{children:'role="dialog"'}),", ",(0,i.jsx)(n.code,{children:'aria-modal="true"'}),", ",(0,i.jsx)(n.code,{children:"aria-labelledby"}),", and keyboard/focus management (see follow-up questions for these features)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-16",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Modal opens when triggered and closes when the close button is clicked."}),"\n",(0,i.jsx)(n.li,{children:"Modal displays the correct title and content."}),"\n",(0,i.jsx)(n.li,{children:"Overlay covers the entire viewport and is semi-transparent."}),"\n",(0,i.jsx)(n.li,{children:"Modal is centered on all screen sizes."}),"\n",(0,i.jsx)(n.li,{children:"Close button is always present and functional."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-16",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'// App.js\r\nimport { useState } from \'react\';\r\nimport ModalDialog from \'./ModalDialog\';\r\n\r\nexport default function App() {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div>\r\n      <button onClick={() => setOpen(true)}>\r\n        Show modal\r\n      </button>\r\n      <ModalDialog\r\n        open={open}\r\n        title="Modal Title"\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections.\r\n      </ModalDialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ModalDialog.js\r\nimport { createPortal } from \'react-dom\';\r\n\r\nexport default function ModalDialog({ children, open = false, title, onClose }) {\r\n  if (!open) return null;\r\n  return createPortal(\r\n    <div className="modal-overlay">\r\n      <div className="modal">\r\n        <h1 className="modal-title">{title}</h1>\r\n        <div>{children}</div>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>,\r\n    document.body,\r\n  );\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"accessibility-notes-7",children:"Accessibility Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For full accessibility, add:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'role="dialog"'})," to the modal container"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'aria-modal="true"'})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"aria-labelledby"})," referencing the modal title"]}),"\n",(0,i.jsx)(n.li,{children:"Keyboard navigation (Esc to close, focus trap, return focus on close)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"See follow-up questions for advanced a11y features."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-13",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/reference/react-dom/createPortal",children:"React Docs: Portals"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/dialog_role",children:"MDN: Dialog Role"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/dialog/",children:"Accessible Modal Dialog Example (WAI-ARIA)"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-data-table-solution",children:"Cheatsheet: React Data Table Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a paginated, dynamic Data Table with page size selection and accessible controls."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-16",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"page"}),": Current page number (starts at 1)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pageSize"}),": Number of users per page (selectable: 5, 10, 20)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pagination Logic:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"paginateUsers(usersList, page, pageSize)"}),": Returns the users for the current page and the total number of pages."]}),"\n",(0,i.jsxs)(n.li,{children:["Start index: ",(0,i.jsx)(n.code,{children:"(page - 1) * pageSize"}),", end index: ",(0,i.jsx)(n.code,{children:"start + pageSize"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Uses ",(0,i.jsx)(n.code,{children:"Array.prototype.slice()"})," to get the current page's users."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Experience:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Changing page size resets to page 1."}),"\n",(0,i.jsx)(n.li,{children:"Prev/Next buttons are disabled at the first/last page."}),"\n",(0,i.jsx)(n.li,{children:"Table updates dynamically as page or page size changes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Page size select and page number span have ",(0,i.jsx)(n.code,{children:"aria-label"})," for screen readers."]}),"\n",(0,i.jsx)(n.li,{children:"All controls are keyboard accessible."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-17",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Table displays columns: ID, Name, Age, Occupation."}),"\n",(0,i.jsx)(n.li,{children:"Each row represents a user."}),"\n",(0,i.jsx)(n.li,{children:"Pagination controls allow navigation and display current/total pages."}),"\n",(0,i.jsx)(n.li,{children:"Table updates when navigating pages or changing page size."}),"\n",(0,i.jsx)(n.li,{children:"Prev/Next buttons are disabled at the ends."}),"\n",(0,i.jsx)(n.li,{children:"All controls are accessible by keyboard and screen reader."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-17",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\r\nimport users from './data/users';\r\n\r\ntype User = (typeof users)[number];\r\n\r\nconst columns = [\r\n  { label: 'ID', key: 'id' },\r\n  { label: 'Name', key: 'name' },\r\n  { label: 'Age', key: 'age' },\r\n  { label: 'Occupation', key: 'occupation' },\r\n] as const;\r\n\r\nfunction paginateUsers(usersList, page, pageSize) {\r\n  const start = (page - 1) * pageSize;\r\n  const end = start + pageSize;\r\n  const pageUsers = usersList.slice(start, end);\r\n  const totalPages = Math.ceil(usersList.length / pageSize);\r\n  return { pageUsers, totalPages };\r\n}\r\n\r\nexport default function DataTable() {\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const { totalPages, pageUsers } = paginateUsers(users, page, pageSize);\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map(({ label, key }) => (\r\n              <th key={key}>{label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pageUsers.map(({ id, name, age, occupation }) => (\r\n            <tr key={id}>\r\n              <td>{id}</td>\r\n              <td>{name}</td>\r\n              <td>{age}</td>\r\n              <td>{occupation}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <hr />\r\n      <div className=\"pagination\">\r\n        <select\r\n          aria-label=\"Page size\"\r\n          onChange={(event) => {\r\n            setPageSize(Number(event.target.value));\r\n            setPage(1);\r\n          }}\r\n        >\r\n          {[5, 10, 20].map((size) => (\r\n            <option key={size} value={size}>\r\n              Show {size}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className=\"pages\">\r\n          <button\r\n            disabled={page === 1}\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Prev\r\n          </button>\r\n          <span aria-label=\"Page number\">\r\n            Page {page} of {totalPages}\r\n          </span>\r\n          <button\r\n            disabled={page === totalPages}\r\n            onClick={() => setPage(page + 1)}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-14",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",children:"MDN: Array.prototype.slice()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/forms",children:"React Docs: Forms"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.w3.org/WAI/tutorials/tables/",children:"Accessible Data Table Example (WAI-ARIA)"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cheatsheet-react-undoable-counter-solution",children:"Cheatsheet: React Undoable Counter Solution"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A classic React coding problem: implement a counter with undo/redo functionality and a history table."})}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts-17",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"counter"}),": The current value of the counter."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"history"}),": Array of action objects (operation, old value, new value), most recent first."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"undoHistory"}),": Array of undone actions, most recent first."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Operations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Supported: ",(0,i.jsx)(n.code,{children:"/2"}),", ",(0,i.jsx)(n.code,{children:"-1"}),", ",(0,i.jsx)(n.code,{children:"+1"}),", ",(0,i.jsx)(n.code,{children:"x2"})," (divide, decrement, increment, multiply)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"performOperation(counter, operationLabel)"}),": Applies the operation to the counter."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Undo/Redo Logic:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Undo: Pops the latest action from ",(0,i.jsx)(n.code,{children:"history"}),", sets counter to ",(0,i.jsx)(n.code,{children:"oldCounter"}),", pushes to ",(0,i.jsx)(n.code,{children:"undoHistory"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Redo: Pops the latest action from ",(0,i.jsx)(n.code,{children:"undoHistory"}),", sets counter to ",(0,i.jsx)(n.code,{children:"newCounter"}),", pushes to ",(0,i.jsx)(n.code,{children:"history"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Performing a new operation after undo clears the ",(0,i.jsx)(n.code,{children:"undoHistory"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Experience:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Undo/Redo buttons are disabled when not possible."}),"\n",(0,i.jsx)(n.li,{children:"Reset button clears all state."}),"\n",(0,i.jsx)(n.li,{children:"All controls are keyboard accessible."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"test-cases-18",children:"Test Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Counter starts at 0."}),"\n",(0,i.jsx)(n.li,{children:"Clicking operation buttons updates the counter and adds to history."}),"\n",(0,i.jsx)(n.li,{children:"Undo reverts the last operation and updates the history table."}),"\n",(0,i.jsx)(n.li,{children:"Redo reapplies the last undone operation."}),"\n",(0,i.jsx)(n.li,{children:"Reset clears counter and history."}),"\n",(0,i.jsx)(n.li,{children:"Performing a new operation after undo disables redo."}),"\n",(0,i.jsx)(n.li,{children:"All controls are accessible by keyboard."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"full-react-code-18",children:"Full React Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\r\n\r\nconst OPERATIONS = {\r\n  '/2': { type: 'divide', number: 2 },\r\n  '-1': { type: 'decrement', number: 1 },\r\n  '+1': { type: 'increment', number: 1 },\r\n  x2: { type: 'multiply', number: 2 },\r\n};\r\n\r\nfunction performOperation(counter, operationLabel) {\r\n  const operation = OPERATIONS[operationLabel];\r\n  switch (operation.type) {\r\n    case 'increment':\r\n      return counter + operation.number;\r\n    case 'decrement':\r\n      return counter - operation.number;\r\n    case 'multiply':\r\n      return counter * operation.number;\r\n    case 'divide':\r\n      return counter / operation.number;\r\n    default:\r\n      return counter;\r\n  }\r\n}\r\n\r\nfunction UndoableCounterHistory({ history }) {\r\n  if (history.length === 0) return null;\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Operation</th>\r\n          <th>Old</th>\r\n          <th>New</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {history.map((item, index) => (\r\n          <tr key={index}>\r\n            <td>{item.operation}</td>\r\n            <td>{item.oldCounter}</td>\r\n            <td>{item.newCounter}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default function UndoableCounter() {\r\n  const [counter, setCounter] = useState(0);\r\n  const [history, setHistory] = useState([]);\r\n  const [undoHistory, setUndoHistory] = useState([]);\r\n\r\n  function onReset() {\r\n    setCounter(0);\r\n    setHistory([]);\r\n    setUndoHistory([]);\r\n  }\r\n\r\n  function onUndo() {\r\n    const [latest, ...earlierHistory] = history;\r\n    setCounter(latest.oldCounter);\r\n    setUndoHistory([latest, ...undoHistory]);\r\n    setHistory(earlierHistory);\r\n  }\r\n\r\n  function onRedo() {\r\n    const [latest, ...earlierUndoHistory] = undoHistory;\r\n    setCounter(latest.newCounter);\r\n    setUndoHistory(earlierUndoHistory);\r\n    setHistory([latest, ...history]);\r\n  }\r\n\r\n  function onClickOperation(operation) {\r\n    const oldCounter = counter;\r\n    const newCounter = performOperation(counter, operation);\r\n    setCounter(newCounter);\r\n    setHistory([\r\n      { operation, oldCounter, newCounter },\r\n      ...history,\r\n    ]);\r\n    setUndoHistory([]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <button disabled={history.length === 0} onClick={onUndo}>\r\n          Undo\r\n        </button>\r\n        <button disabled={undoHistory.length === 0} onClick={onRedo}>\r\n          Redo\r\n        </button>\r\n        <button onClick={onReset}>Reset</button>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <button onClick={() => onClickOperation('/2')}>/2</button>\r\n        <button onClick={() => onClickOperation('-1')}>-1</button>\r\n        <div className=\"counter\">{counter}</div>\r\n        <button onClick={() => onClickOperation('+1')}>+1</button>\r\n        <button onClick={() => onClickOperation('x2')}>x2</button>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <UndoableCounterHistory history={history} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"further-reading--resources-15",children:"Further Reading & Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://react.dev/learn/state-a-components-memory",children:"React Docs: State"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",children:"MDN: Array.prototype.slice()"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var s=r(6540);const i={},t=s.createContext(i);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);