"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9629],{8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var l=i(6540);const s={},r=l.createContext(s);function t(e){const n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(r.Provider,{value:n},e.children)}},8610:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"modal-dialog","title":"Modal Dialog System Design","description":"System design interview question: Design a modal/dialog component that shows content in a window overlaying the page.","source":"@site/docs/19-modal-dialog.md","sourceDirName":".","slug":"/modal-dialog","permalink":"/frontend-system-design/docs/modal-dialog","draft":false,"unlisted":false,"editUrl":"https://github.com/binhphanhai/frontend-system-design/tree/main/Summarize/docs/19-modal-dialog.md","tags":[],"version":"current","sidebarPosition":19,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Travel Booking System Design (e.g. Airbnb)","permalink":"/frontend-system-design/docs/travel-booking"},"next":{"title":"Poll Widget System Design","permalink":"/frontend-system-design/docs/poll-widget"}}');var s=i(4848),r=i(8453);const t={},d="Modal Dialog System Design",o={},a=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"1. Overview",id:"1-overview",level:2},{value:"2. Requirements Exploration",id:"2-requirements-exploration",level:2},{value:"Core Features",id:"core-features",level:3},{value:"Advanced/Optional Features",id:"advancedoptional-features",level:3},{value:"Flexibility",id:"flexibility",level:3},{value:"3. Architecture &amp; High-Level Design",id:"3-architecture--high-level-design",level:2},{value:"Component Structure",id:"component-structure",level:3},{value:"Event Handling &amp; Context",id:"event-handling--context",level:3},{value:"Portal Rendering",id:"portal-rendering",level:3},{value:"4. Data Model",id:"4-data-model",level:2},{value:"State",id:"state",level:3},{value:"Configuration (Props)",id:"configuration-props",level:3},{value:"Example TypeScript Types",id:"example-typescript-types",level:4},{value:"5. Interface Definition (API)",id:"5-interface-definition-api",level:2},{value:"General Props",id:"general-props",level:3},{value:"Modal Root (<code>&lt;Modal&gt;</code>) Props",id:"modal-root-modal-props",level:3},{value:"Header, Body, Footer",id:"header-body-footer",level:3},{value:"Customizing Appearance",id:"customizing-appearance",level:3},{value:"6. Optimizations and Deep Dive",id:"6-optimizations-and-deep-dive",level:2},{value:"Rendering Outside DOM Hierarchy",id:"rendering-outside-dom-hierarchy",level:3},{value:"Overlay Implementation",id:"overlay-implementation",level:3},{value:"Centering the Modal",id:"centering-the-modal",level:3},{value:"Maximum Height and Scroll Lock",id:"maximum-height-and-scroll-lock",level:3},{value:"Rendering Strategies",id:"rendering-strategies",level:3},{value:"Animations and Transitions",id:"animations-and-transitions",level:3},{value:"Scroll Lock and Focus Trap",id:"scroll-lock-and-focus-trap",level:3},{value:"Z-Index and Layering",id:"z-index-and-layering",level:3},{value:"7. Accessibility (a11y)",id:"7-accessibility-a11y",level:2},{value:"Mouse Interactions",id:"mouse-interactions",level:3},{value:"Focus Management",id:"focus-management",level:3},{value:"Keyboard Interactions",id:"keyboard-interactions",level:3},{value:"WAI-ARIA Roles and Properties",id:"wai-aria-roles-and-properties",level:3},{value:"Native <code>&lt;dialog&gt;</code> Element",id:"native-dialog-element",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"8. Internationalization (i18n)",id:"8-internationalization-i18n",level:2},{value:"9. Customization, Theming, and Extensibility",id:"9-customization-theming-and-extensibility",level:2},{value:"10. Performance, Security, and Testing",id:"10-performance-security-and-testing",level:2},{value:"11. Stacked Modals &amp; Advanced Topics",id:"11-stacked-modals--advanced-topics",level:2},{value:"Stacked Modals",id:"stacked-modals",level:3},{value:"Advanced Topics",id:"advanced-topics",level:3},{value:"12. References",id:"12-references",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"modal-dialog-system-design",children:"Modal Dialog System Design"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"System design interview question: Design a modal/dialog component that shows content in a window overlaying the page."})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#requirements-exploration",children:"Requirements Exploration"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#architecture--high-level-design",children:"Architecture & High-Level Design"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#data-model",children:"Data Model"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#interface-definition-api",children:"Interface Definition (API)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#optimizations-and-deep-dive",children:"Optimizations and Deep Dive"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#accessibility-a11y",children:"Accessibility (a11y)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#internationalization-i18n",children:"Internationalization (i18n)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#customization-theming-and-extensibility",children:"Customization, Theming, and Extensibility"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#performance-security-and-testing",children:"Performance, Security, and Testing"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#stacked-modals--advanced-topics",children:"Stacked Modals & Advanced Topics"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#references",children:"References"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-overview",children:"1. Overview"}),"\n",(0,s.jsx)(n.p,{children:"Modal dialogs are essential UI components for displaying content in a window overlaying the main page. They are used for confirmations, forms, alerts, onboarding, and more. A robust modal must be accessible, customizable, performant, secure, and work across all devices and locales. This document provides a deep technical dive into the architecture, data model, APIs, rendering, accessibility, real-world trade-offs, and production considerations for building a modern, enterprise-grade modal dialog component."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://www.gfecdn.net/img/questions/modal-dialog/modal-dialog-example.png",alt:"Modal Dialog Example"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Real-life Examples:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://getbootstrap.com/docs/5.3/components/modal",children:"Bootstrap Modal"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://mui.com/material-ui/react-modal/",children:"Material UI Modal"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.radix-ui.com/docs/primitives/components/dialog",children:"Radix UI Dialog"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-requirements-exploration",children:"2. Requirements Exploration"}),"\n",(0,s.jsx)(n.h3,{id:"core-features",children:"Core Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Overlay window that displays content above the main page"}),"\n",(0,s.jsx)(n.li,{children:"Customizable content (header, body, footer)"}),"\n",(0,s.jsx)(n.li,{children:"Support for close buttons, titles, and footer actions"}),"\n",(0,s.jsx)(n.li,{children:"Customizable appearance (colors, fonts, padding, etc.)"}),"\n",(0,s.jsx)(n.li,{children:"Works on all devices: mobile, tablet, desktop"}),"\n",(0,s.jsx)(n.li,{children:"Support for keyboard, mouse, and touch interactions"}),"\n",(0,s.jsx)(n.li,{children:"Focus management and accessibility"}),"\n",(0,s.jsx)(n.li,{children:"Theming and branding support"}),"\n",(0,s.jsx)(n.li,{children:"Support for controlled and uncontrolled usage"}),"\n",(0,s.jsx)(n.li,{children:"Support for SSR/SSG (server-side rendering/static site generation)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"advancedoptional-features",children:"Advanced/Optional Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Animation and transitions (fade, slide, scale)"}),"\n",(0,s.jsx)(n.li,{children:"Scroll locking and background interaction prevention"}),"\n",(0,s.jsx)(n.li,{children:"Portal rendering and z-index management"}),"\n",(0,s.jsx)(n.li,{children:"Stacked modals (multiple open at once)"}),"\n",(0,s.jsx)(n.li,{children:"Customizable overlay and close behavior"}),"\n",(0,s.jsx)(n.li,{children:"Analytics hooks for open/close, action events"}),"\n",(0,s.jsx)(n.li,{children:"Security and XSS prevention in user content"}),"\n",(0,s.jsx)(n.li,{children:"Integration with design systems and theming"}),"\n",(0,s.jsx)(n.li,{children:"RTL (right-to-left) support"}),"\n",(0,s.jsx)(n.li,{children:"Accessibility (WCAG, ARIA, keyboard, screen reader)"}),"\n",(0,s.jsx)(n.li,{children:"Error handling and fallback UI"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"flexibility",children:"Flexibility"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Users can customize modal structure and content"}),"\n",(0,s.jsx)(n.li,{children:"Optional built-in support for header, footer, close button"}),"\n",(0,s.jsx)(n.li,{children:"Customizable via props, className, theme, or style"}),"\n",(0,s.jsx)(n.li,{children:"Slot-based composition for advanced use cases"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-architecture--high-level-design",children:"3. Architecture & High-Level Design"}),"\n",(0,s.jsx)(n.h3,{id:"component-structure",children:"Component Structure"}),"\n",(0,s.jsx)(n.p,{children:"A modal dialog typically consists of:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Modal Root (",(0,s.jsx)(n.code,{children:"<Modal>"}),")"]}),": Coordinates events and state, provides context"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modal Overlay"}),": Dims the background, blocks interaction"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Modal Header (",(0,s.jsx)(n.code,{children:"<Modal.Header>"}),")"]}),": Title and close button"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Modal Body (",(0,s.jsx)(n.code,{children:"<Modal.Body>"}),")"]}),": Main content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Modal Footer (",(0,s.jsx)(n.code,{children:"<Modal.Footer>"}),")"]}),": Actions (e.g., Close, Confirm)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example React Usage:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<Modal isOpen={isOpen} onClose={handleClose}>\r\n  <Modal.Header>My Modal Title</Modal.Header>\r\n  <Modal.Body>\r\n    <p>Modal body text goes here.</p>\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n    <button onClick={handleClose}>Close</button>\r\n    <button>Confirm</button>\r\n  </Modal.Footer>\r\n</Modal>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Component Roles Table:"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Role"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Modal Root"}),(0,s.jsx)(n.td,{children:"Coordinates events, provides context, manages open/close"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Modal Overlay"}),(0,s.jsx)(n.td,{children:"Renders background overlay, dims page, blocks interaction"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Modal Header"}),(0,s.jsx)(n.td,{children:"Top section, contains title and close button"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Modal Body"}),(0,s.jsx)(n.td,{children:"Main content area"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Modal Footer"}),(0,s.jsx)(n.td,{children:"Bottom section, contains actions (close, submit, etc.)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"event-handling--context",children:"Event Handling & Context"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use React Context to provide config/options to all child components"}),"\n",(0,s.jsx)(n.li,{children:"Decouple trigger source from modal contents (can be opened by user or background action)"}),"\n",(0,s.jsx)(n.li,{children:"Controlled component: open/close state managed outside the modal"}),"\n",(0,s.jsx)(n.li,{children:"Support for imperative open/close via refs or context"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"portal-rendering",children:"Portal Rendering"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Render modal outside parent DOM hierarchy (e.g., via React Portals)"}),"\n",(0,s.jsx)(n.li,{children:"Prevents parent styles (overflow, z-index) from interfering with modal"}),"\n",(0,s.jsx)(n.li,{children:"Allows stacking and global z-index management"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-data-model",children:"4. Data Model"}),"\n",(0,s.jsx)(n.h3,{id:"state",children:"State"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"State"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"previousFocusElement"}),(0,s.jsx)(n.td,{children:"HTMLElement"}),(0,s.jsx)(n.td,{children:"Element in focus before modal was shown (for focus return)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"isOpen"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Whether the modal is open or closed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"animationState"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"'entering', 'entered', 'exiting', 'exited' (for transitions)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"stackIndex"}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Index in modal stack (for stacked modals)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"configuration-props",children:"Configuration (Props)"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"isOpen"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Whether the modal is open or closed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"onClose"}),(0,s.jsx)(n.td,{children:"Function"}),(0,s.jsx)(n.td,{children:"Callback when modal is closed (close button, Esc, overlay click)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"maxHeight"}),(0,s.jsx)(n.td,{children:"number/undefined"}),(0,s.jsx)(n.td,{children:"Max height of modal (default ~80% viewport height)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"width"}),(0,s.jsx)(n.td,{children:"number/undefined"}),(0,s.jsx)(n.td,{children:"Width of modal (default 500-600px)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"children"}),(0,s.jsx)(n.td,{children:"React.Node"}),(0,s.jsx)(n.td,{children:"Modal content (header, body, footer)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"as"}),(0,s.jsx)(n.td,{children:"string/Component"}),(0,s.jsx)(n.td,{children:"Custom underlying DOM element/component"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"className"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Custom class names for styling"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"overlayClassName"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Custom class for overlay"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"closeOnOverlayClick"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Whether clicking overlay closes modal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"closeOnEsc"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Whether Esc key closes modal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"animation"}),(0,s.jsx)(n.td,{children:"string/object"}),(0,s.jsx)(n.td,{children:"Animation type or config"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"theme"}),(0,s.jsx)(n.td,{children:"string/object"}),(0,s.jsx)(n.td,{children:"Theming options"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example-typescript-types",children:"Example TypeScript Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  maxHeight?: number;\r\n  width?: number;\r\n  as?: string | React.ComponentType;\r\n  className?: string;\r\n  overlayClassName?: string;\r\n  closeOnOverlayClick?: boolean;\r\n  closeOnEsc?: boolean;\r\n  animation?: 'fade' | 'slide' | 'scale' | object;\r\n  theme?: string | object;\r\n  children: React.ReactNode;\r\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-interface-definition-api",children:"5. Interface Definition (API)"}),"\n",(0,s.jsx)(n.h3,{id:"general-props",children:"General Props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"children"}),(0,s.jsx)(n.td,{children:"React.Node"}),(0,s.jsx)(n.td,{children:"Children of the component"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"as"}),(0,s.jsx)(n.td,{children:"string/Component"}),(0,s.jsx)(n.td,{children:"Custom DOM element/component"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"className"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Custom class names for styling"})]})]})]}),"\n",(0,s.jsxs)(n.h3,{id:"modal-root-modal-props",children:["Modal Root (",(0,s.jsx)(n.code,{children:"<Modal>"}),") Props"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"isOpen"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Whether the modal is open or closed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"onClose"}),(0,s.jsx)(n.td,{children:"Function"}),(0,s.jsx)(n.td,{children:"Callback when modal is closed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"maxHeight"}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Max height of modal (default ~80% viewport height)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"width"}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Width of modal (default 500-600px)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"overlayClassName"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Custom class for overlay"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"closeOnOverlayClick"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Whether clicking overlay closes modal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"closeOnEsc"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Whether Esc key closes modal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"animation"}),(0,s.jsx)(n.td,{children:"string/object"}),(0,s.jsx)(n.td,{children:"Animation type or config"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"theme"}),(0,s.jsx)(n.td,{children:"string/object"}),(0,s.jsx)(n.td,{children:"Theming options"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"header-body-footer",children:"Header, Body, Footer"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Usually only require ",(0,s.jsx)(n.code,{children:"children"})," prop"]}),"\n",(0,s.jsxs)(n.li,{children:["Can accept ",(0,s.jsx)(n.code,{children:"as"}),", ",(0,s.jsx)(n.code,{children:"className"}),", and style props for customization"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"customizing-appearance",children:"Customizing Appearance"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Customization via className, theme, or style props"}),"\n",(0,s.jsx)(n.li,{children:"Most content is user-provided, so default styling is minimal"}),"\n",(0,s.jsx)(n.li,{children:"Support for design tokens, CSS variables, or theme objects"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"6-optimizations-and-deep-dive",children:"6. Optimizations and Deep Dive"}),"\n",(0,s.jsx)(n.h3,{id:"rendering-outside-dom-hierarchy",children:"Rendering Outside DOM Hierarchy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Modals must render outside parent DOM hierarchy to avoid clipping (e.g., via React Portals)"}),"\n",(0,s.jsx)(n.li,{children:"Prevents parent styles (overflow, z-index) from interfering with modal"}),"\n",(0,s.jsx)(n.li,{children:"Allows stacking and global z-index management"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { createPortal } from 'react-dom';\r\ncreatePortal(<ModalContents />, document.body);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"overlay-implementation",children:"Overlay Implementation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Overlay/backdrop dims the page and blocks interaction"}),"\n",(0,s.jsx)(n.li,{children:"CSS example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".modal-overlay {\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  position: fixed;\r\n  top: 0; left: 0; right: 0; bottom: 0;\r\n  z-index: 1000;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"centering-the-modal",children:"Centering the Modal"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use flexbox to center modal contents within overlay"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".modal-overlay {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"maximum-height-and-scroll-lock",children:"Maximum Height and Scroll Lock"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set max height for modal, make body scrollable if content overflows"}),"\n",(0,s.jsxs)(n.li,{children:["Lock background scroll when modal is open (",(0,s.jsx)(n.code,{children:"body { overflow: hidden; }"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Consider iOS quirks (e.g., overscroll, viewport units)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rendering-strategies",children:"Rendering Strategies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Render modal in HTML (hidden by default) or dynamically via JS"}),"\n",(0,s.jsx)(n.li,{children:"Pre-rendering: better performance, but can bloat HTML"}),"\n",(0,s.jsx)(n.li,{children:"Dynamic: less HTML, but more DOM operations"}),"\n",(0,s.jsx)(n.li,{children:"SSR/SSG: Ensure modal does not break hydration"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"animations-and-transitions",children:"Animations and Transitions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Animate overlay and modal contents independently (fade, slide, scale)"}),"\n",(0,s.jsx)(n.li,{children:"Use React Transition Group, Framer Motion, or CSS transitions"}),"\n",(0,s.jsx)(n.li,{children:"Animate entrance and exit (handle unmounting for exit transitions)"}),"\n",(0,s.jsx)(n.li,{children:"Respect user preferences for reduced motion"}),"\n",(0,s.jsx)(n.li,{children:"Example animation config:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const animation = {\r\n  enter: { opacity: 1, transform: 'scale(1)' },\r\n  exit: { opacity: 0, transform: 'scale(0.95)' },\r\n  duration: 200\r\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"scroll-lock-and-focus-trap",children:"Scroll Lock and Focus Trap"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add ",(0,s.jsx)(n.code,{children:"overflow: hidden"})," to ",(0,s.jsx)(n.code,{children:"<body>"})," when modal is open"]}),"\n",(0,s.jsxs)(n.li,{children:["Use libraries like ",(0,s.jsx)(n.code,{children:"body-scroll-lock"})," for cross-browser support"]}),"\n",(0,s.jsx)(n.li,{children:"Trap focus within modal (see Accessibility section)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"z-index-and-layering",children:"Z-Index and Layering"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use high z-index for modal overlay and contents"}),"\n",(0,s.jsx)(n.li,{children:"Manage stacking context for multiple modals"}),"\n",(0,s.jsx)(n.li,{children:"Consider portal root stacking for integration with other overlays (dropdowns, tooltips)"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"7-accessibility-a11y",children:"7. Accessibility (a11y)"}),"\n",(0,s.jsx)(n.h3,{id:"mouse-interactions",children:"Mouse Interactions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clicking overlay closes modal (but not clicks inside modal)"}),"\n",(0,s.jsx)(n.li,{children:"Remove event listeners when modal closes"}),"\n",(0,s.jsx)(n.li,{children:"Support for pointer events and touch devices"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"focus-management",children:"Focus Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Trap focus within modal (focus trap)"}),"\n",(0,s.jsx)(n.li,{children:"On open: save previous focus, move focus to modal"}),"\n",(0,s.jsx)(n.li,{children:"On close: return focus to previous element"}),"\n",(0,s.jsxs)(n.li,{children:["Use libraries like ",(0,s.jsx)(n.a,{href:"https://focus-trap.github.io/focus-trap/",children:"focus-trap"})," or ",(0,s.jsx)(n.a,{href:"https://github.com/theKashey/react-focus-lock",children:"react-focus-lock"})]}),"\n",(0,s.jsx)(n.li,{children:"Example focus trap logic:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"function trapFocus(modalRef) {\r\n  const focusableEls = modalRef.querySelectorAll('a, button, textarea, input, select, [tabindex]:not([tabindex=\"-1\"])');\r\n  // ...cycle focus logic\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"keyboard-interactions",children:"Keyboard Interactions"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Key"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Tab"}),(0,s.jsx)(n.td,{children:"Move focus to next tabbable element in modal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Shift+Tab"}),(0,s.jsx)(n.td,{children:"Move focus to previous tabbable element in modal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Esc"}),(0,s.jsx)(n.td,{children:"Close modal"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Arrow Keys"}),(0,s.jsx)(n.td,{children:"(Optional) Navigate between modal actions"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"wai-aria-roles-and-properties",children:"WAI-ARIA Roles and Properties"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modal container: ",(0,s.jsx)(n.code,{children:'role="dialog"'}),", ",(0,s.jsx)(n.code,{children:'aria-modal="true"'})]}),"\n",(0,s.jsxs)(n.li,{children:["Label modal with ",(0,s.jsx)(n.code,{children:"aria-labelledby"})," (title) or ",(0,s.jsx)(n.code,{children:"aria-label"})]}),"\n",(0,s.jsxs)(n.li,{children:["Optionally use ",(0,s.jsx)(n.code,{children:"aria-describedby"})," for additional context"]}),"\n",(0,s.jsx)(n.li,{children:"All modal content should be descendants of the dialog"}),"\n",(0,s.jsxs)(n.li,{children:["Hide background content from screen readers (e.g., ",(0,s.jsx)(n.code,{children:"aria-hidden"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"native-dialog-element",children:["Native ",(0,s.jsx)(n.code,{children:"<dialog>"})," Element"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Native HTML dialog element provides some accessibility features"}),"\n",(0,s.jsx)(n.li,{children:"Still requires manual focus management and is not fully supported everywhere"}),"\n",(0,s.jsx)(n.li,{children:"Polyfills may be needed for legacy browsers"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure all actions are accessible via keyboard"}),"\n",(0,s.jsx)(n.li,{children:"Provide visible focus indicators"}),"\n",(0,s.jsx)(n.li,{children:"Announce modal open/close to screen readers (ARIA live regions)"}),"\n",(0,s.jsx)(n.li,{children:"Avoid auto-focusing elements that disrupt user flow"}),"\n",(0,s.jsx)(n.li,{children:"Test with screen readers (NVDA, JAWS, VoiceOver)"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"8-internationalization-i18n",children:"8. Internationalization (i18n)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All user-facing strings should be customizable"}),"\n",(0,s.jsx)(n.li,{children:"Support for long strings (truncate or wrap as needed)"}),"\n",(0,s.jsx)(n.li,{children:"RTL support: flip layout for right-to-left languages"}),"\n",(0,s.jsx)(n.li,{children:"Use CSS logical properties (margin-inline, padding-inline)"}),"\n",(0,s.jsx)(n.li,{children:"Localize all visible text, tooltips, and error messages"}),"\n",(0,s.jsx)(n.li,{children:"Support for different number/date/currency formats in modal content"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://www.gfecdn.net/img/questions/modal-dialog/modal-dialog-rtl.png",alt:"Modal Dialog RTL Example"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"9-customization-theming-and-extensibility",children:"9. Customization, Theming, and Extensibility"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Theming: Support for CSS variables, theme objects, or design tokens"}),"\n",(0,s.jsx)(n.li,{children:"Custom transitions: Allow user to provide custom animation logic"}),"\n",(0,s.jsx)(n.li,{children:"Slot-based composition: Allow custom header, footer, overlay, close button"}),"\n",(0,s.jsx)(n.li,{children:"Extensible event system: Custom hooks for analytics, logging, etc."}),"\n",(0,s.jsx)(n.li,{children:"Integration: Compatible with design systems (e.g., Material UI, Chakra)"}),"\n",(0,s.jsx)(n.li,{children:"SSR/SSG support: Render correctly in Next.js, Gatsby, etc."}),"\n",(0,s.jsx)(n.li,{children:"Plugin architecture: Allow for plugins (e.g., alert dialogs, drawers, side panels)"}),"\n",(0,s.jsx)(n.li,{children:"Support for custom overlays, backgrounds, and close icons"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"10-performance-security-and-testing",children:"10. Performance, Security, and Testing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Defer rendering of modal until needed (lazy mount)"}),"\n",(0,s.jsx)(n.li,{children:"Minimize re-renders by memoizing modal content"}),"\n",(0,s.jsx)(n.li,{children:"Optimize for mobile: avoid layout thrashing, use passive event listeners"}),"\n",(0,s.jsx)(n.li,{children:"Security: prevent XSS in user content, sanitize HTML if rendering raw"}),"\n",(0,s.jsx)(n.li,{children:"Analytics hooks: Expose events for open, close, action, error"}),"\n",(0,s.jsx)(n.li,{children:"Error handling: Show fallback UI on error, log errors"}),"\n",(0,s.jsx)(n.li,{children:"Testing: unit tests for open/close, focus, keyboard, a11y; integration tests for stacking, animation, SSR"}),"\n",(0,s.jsx)(n.li,{children:"Visual regression: Use Percy, Chromatic, or Storybook"}),"\n",(0,s.jsx)(n.li,{children:"Performance monitoring: Track open/close latency, animation smoothness"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"11-stacked-modals--advanced-topics",children:"11. Stacked Modals & Advanced Topics"}),"\n",(0,s.jsx)(n.h3,{id:"stacked-modals",children:"Stacked Modals"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Support multiple modals open at once (e.g., modal in modal)"}),"\n",(0,s.jsx)(n.li,{children:"Overlay per modal level (darker backdrop for higher stack)"}),"\n",(0,s.jsx)(n.li,{children:"Only topmost modal closes on Esc or overlay click"}),"\n",(0,s.jsx)(n.li,{children:"Dismissing lower modal can close all above (or make customizable)"}),"\n",(0,s.jsx)(n.li,{children:"Manage focus and z-index for each modal in stack"}),"\n",(0,s.jsx)(n.li,{children:"Example stack management:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface ModalStackItem {\r\n  id: string;\r\n  zIndex: number;\r\n  onClose: () => void;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Tooltips and dropdowns within modals (manage z-index and focus)"}),"\n",(0,s.jsxs)(n.li,{children:["Alert dialogs and ARIA patterns (",(0,s.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/",children:"Alert Dialog Pattern"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Animations: entrance/exit, independent overlay/content transitions"}),"\n",(0,s.jsx)(n.li,{children:"Performance: avoid unnecessary re-renders, optimize for mobile"}),"\n",(0,s.jsx)(n.li,{children:"Security: prevent XSS in user content, avoid leaking focus"}),"\n",(0,s.jsx)(n.li,{children:"SSR/SSG: Hydration-safe modal rendering"}),"\n",(0,s.jsx)(n.li,{children:"Testing: unit/integration tests for open/close, focus, keyboard, a11y"}),"\n",(0,s.jsx)(n.li,{children:"Anti-patterns: Avoid modals for critical flows, avoid nested modals unless necessary"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"12-references",children:"12. References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://getbootstrap.com/docs/5.3/components/modal",children:"Bootstrap Modal"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://mui.com/material-ui/react-modal/",children:"Material UI Modal"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.radix-ui.com/docs/primitives/components/dialog",children:"Radix UI Dialog"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://reach.tech/dialog",children:"Reach UI Dialog"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://headlessui.com/react/dialog",children:"Headless UI Dialog"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/",children:"WAI-ARIA Dialog Pattern"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/",children:"WAI-ARIA Alert Dialog Pattern"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog",children:"MDN: dialog element"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://focus-trap.github.io/focus-trap/",children:"focus-trap"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/theKashey/react-focus-lock",children:"react-focus-lock"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/willmcpo/body-scroll-lock",children:"body-scroll-lock"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties",children:"CSS Logical Properties"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"This document provides an exhaustive, technical overview of the design and implementation of a modern modal dialog component. It covers architecture, data modeling, API, rendering, accessibility, customization, performance, security, analytics, testing, advanced topics, and real-world trade-offs, serving as a reference for advanced system design interviews and production-grade implementations."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);